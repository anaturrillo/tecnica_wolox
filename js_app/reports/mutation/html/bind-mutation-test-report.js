document.querySelector('mutation-test-report-app').report = {"files":{"/home/ana/dev/entrevista_wolox/js_app/api/albums/albums.client.js":{"language":"javascript","mutants":[{"id":"0","location":{"end":{"column":30,"line":1},"start":{"column":23,"line":1}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"2","location":{"end":{"column":45,"line":3},"start":{"column":26,"line":3}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"1","location":{"end":{"column":40,"line":2},"start":{"column":27,"line":2}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"3","location":{"end":{"column":45,"line":7},"start":{"column":37,"line":7}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"5","location":{"end":{"column":42,"line":10},"start":{"column":18,"line":10}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"4","location":{"end":{"column":42,"line":8},"start":{"column":39,"line":8}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"}],"source":"const axios = require('axios');\nconst {getData} = require('../../utils');\nconst endpoint = require('./albums.endpoint');\n\nconst client = axios.create(endpoint);\n\nconst getAlbum = (id) => client.get(`/${id}`).then(getData);\nconst getAllAlbums = () => client.get('/').then(getData);\n\nmodule.exports = {getAlbum, getAllAlbums};"},"/home/ana/dev/entrevista_wolox/js_app/api/albums/albums.controller.js":{"language":"javascript","mutants":[{"id":"6","location":{"end":{"column":52,"line":1},"start":{"column":36,"line":1}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"7","location":{"end":{"column":2,"line":9},"start":{"column":37,"line":5}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"8","location":{"end":{"column":52,"line":6},"start":{"column":17,"line":6}},"mutatorName":"BinaryExpression","replacement":"req && req.query || req.query.field","status":"Killed"},{"id":"10","location":{"end":{"column":52,"line":6},"start":{"column":17,"line":6}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"9","location":{"end":{"column":52,"line":6},"start":{"column":17,"line":6}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"11","location":{"end":{"column":33,"line":6},"start":{"column":17,"line":6}},"mutatorName":"BinaryExpression","replacement":"req || req.query","status":"Killed"},{"id":"12","location":{"end":{"column":33,"line":6},"start":{"column":17,"line":6}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"15","location":{"end":{"column":52,"line":7},"start":{"column":17,"line":7}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"16","location":{"end":{"column":52,"line":7},"start":{"column":17,"line":7}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"18","location":{"end":{"column":33,"line":7},"start":{"column":17,"line":7}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"14","location":{"end":{"column":52,"line":7},"start":{"column":17,"line":7}},"mutatorName":"BinaryExpression","replacement":"req && req.query || req.query.value","status":"Killed"},{"id":"17","location":{"end":{"column":33,"line":7},"start":{"column":17,"line":7}},"mutatorName":"BinaryExpression","replacement":"req || req.query","status":"Killed"},{"id":"21","location":{"end":{"column":42,"line":11},"start":{"column":18,"line":11}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"13","location":{"end":{"column":33,"line":6},"start":{"column":17,"line":6}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"19","location":{"end":{"column":33,"line":7},"start":{"column":17,"line":7}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"20","location":{"end":{"column":34,"line":8},"start":{"column":20,"line":8}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"}],"source":"const {album, allAlbums} = require('./albums.model');\n\nconst getAlbum = (req) => album(req.params.id);\n\nconst getAllAlbums = async (req) => {\n  const field = req && req.query && req.query.field;\n  const value = req && req.query && req.query.value;\n  return allAlbums({field, value})\n};\n\nmodule.exports = {getAllAlbums, getAlbum};"},"/home/ana/dev/entrevista_wolox/js_app/api/albums/albums.endpoint.js":{"language":"javascript","mutants":[{"id":"22","location":{"end":{"column":38,"line":1},"start":{"column":24,"line":1}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"23","location":{"end":{"column":2,"line":6},"start":{"column":18,"line":3}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"24","location":{"end":{"column":53,"line":4},"start":{"column":12,"line":4}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"}],"source":"const config = require('../../config');\n\nmodule.exports = {\n  baseURL: `${config.jsonplaceholder.domain}/albums`,\n  timeout: 5000\n};"},"/home/ana/dev/entrevista_wolox/js_app/api/albums/albums.model.js":{"language":"javascript","mutants":[{"id":"25","location":{"end":{"column":41,"line":1},"start":{"column":24,"line":1}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"26","location":{"end":{"column":70,"line":2},"start":{"column":57,"line":2}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"27","location":{"end":{"column":50,"line":3},"start":{"column":29,"line":3}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"29","location":{"end":{"column":2,"line":27},"start":{"column":45,"line":9}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"30","location":{"end":{"column":45,"line":12},"start":{"column":7,"line":12}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"31","location":{"end":{"column":45,"line":12},"start":{"column":7,"line":12}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"28","location":{"end":{"column":2,"line":7},"start":{"column":21,"line":5}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"35","location":{"end":{"column":23,"line":12},"start":{"column":8,"line":12}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"36","location":{"end":{"column":23,"line":12},"start":{"column":17,"line":12}},"mutatorName":"PrefixUnaryExpression","replacement":"value","status":"Killed"},{"id":"32","location":{"end":{"column":45,"line":12},"start":{"column":7,"line":12}},"mutatorName":"BinaryExpression","replacement":"field && !value && !field && value","status":"Killed"},{"id":"37","location":{"end":{"column":44,"line":12},"start":{"column":29,"line":12}},"mutatorName":"BinaryExpression","replacement":"!field || value","status":"Killed"},{"id":"33","location":{"end":{"column":23,"line":12},"start":{"column":8,"line":12}},"mutatorName":"BinaryExpression","replacement":"field || !value","status":"Killed"},{"id":"39","location":{"end":{"column":44,"line":12},"start":{"column":29,"line":12}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"40","location":{"end":{"column":35,"line":12},"start":{"column":29,"line":12}},"mutatorName":"PrefixUnaryExpression","replacement":"field","status":"Killed"},{"id":"41","location":{"end":{"column":113,"line":12},"start":{"column":53,"line":12}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"38","location":{"end":{"column":44,"line":12},"start":{"column":29,"line":12}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"42","location":{"end":{"column":92,"line":12},"start":{"column":61,"line":12}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"34","location":{"end":{"column":23,"line":12},"start":{"column":8,"line":12}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"45","location":{"end":{"column":68,"line":14},"start":{"column":7,"line":14}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"43","location":{"end":{"column":112,"line":12},"start":{"column":100,"line":12}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"46","location":{"end":{"column":68,"line":14},"start":{"column":7,"line":14}},"mutatorName":"BinaryExpression","replacement":"field && value || !findValueByKeyInObject(albumFormat, field)","status":"Killed"},{"id":"47","location":{"end":{"column":21,"line":14},"start":{"column":7,"line":14}},"mutatorName":"BinaryExpression","replacement":"field || value","status":"Killed"},{"id":"49","location":{"end":{"column":21,"line":14},"start":{"column":7,"line":14}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"50","location":{"end":{"column":68,"line":14},"start":{"column":25,"line":14}},"mutatorName":"PrefixUnaryExpression","replacement":"findValueByKeyInObject(albumFormat, field)","status":"Killed"},{"id":"44","location":{"end":{"column":68,"line":14},"start":{"column":7,"line":14}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"53","location":{"end":{"column":170,"line":14},"start":{"column":158,"line":14}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"54","location":{"end":{"column":52,"line":16},"start":{"column":38,"line":16}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"48","location":{"end":{"column":21,"line":14},"start":{"column":7,"line":14}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"51","location":{"end":{"column":171,"line":14},"start":{"column":76,"line":14}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"55","location":{"end":{"column":19,"line":18},"start":{"column":7,"line":18}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"57","location":{"end":{"column":4,"line":24},"start":{"column":21,"line":18}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"52","location":{"end":{"column":150,"line":14},"start":{"column":84,"line":14}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"59","location":{"end":{"column":30,"line":21},"start":{"column":9,"line":21}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"58","location":{"end":{"column":30,"line":21},"start":{"column":9,"line":21}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"61","location":{"end":{"column":93,"line":21},"start":{"column":38,"line":21}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"63","location":{"end":{"column":92,"line":21},"start":{"column":81,"line":21}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"56","location":{"end":{"column":19,"line":18},"start":{"column":7,"line":18}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"60","location":{"end":{"column":30,"line":21},"start":{"column":9,"line":21}},"mutatorName":"BinaryExpression","replacement":"response.length !== 0","status":"Killed"},{"id":"65","location":{"end":{"column":36,"line":29},"start":{"column":18,"line":29}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"62","location":{"end":{"column":73,"line":21},"start":{"column":46,"line":21}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"64","location":{"end":{"column":4,"line":26},"start":{"column":10,"line":24}},"mutatorName":"Block","replacement":"{}","status":"Killed"}],"source":"const client = require('./albums.client');\nconst {filterByValue, findValueByKeyInObject} = require('../../utils');\nconst albumFormat = require('../../utils/formats').album;\n\nconst album = id => {\n  return client.getAlbum(id)\n};\n\nconst allAlbums = async ({field, value}) => {\n  const albums = await client.getAllAlbums();\n\n  if ((field && !value) || (!field && value)) throw {error: 'Missing either field or value', code: 'bad_format'};\n\n  if (field && value && !findValueByKeyInObject(albumFormat, field)) throw {error: 'The property you are looking for does not exist in this resourse', code: 'bad_format'};\n\n  const byFieldValue = filterByValue({field, value}, albumFormat);\n\n  if (byFieldValue) {\n    const response = albums.filter(byFieldValue);\n\n    if (response.length === 0) throw {error: 'No value matched criteria', code: 'not_found'};\n    return response\n\n  } else {\n    return  albums\n  }\n};\n\nmodule.exports = {album, allAlbums};"},"/home/ana/dev/entrevista_wolox/js_app/api/albums/albums.routes.js":{"language":"javascript","mutants":[{"id":"66","location":{"end":{"column":34,"line":1},"start":{"column":25,"line":1}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"67","location":{"end":{"column":63,"line":2},"start":{"column":42,"line":2}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"68","location":{"end":{"column":40,"line":3},"start":{"column":25,"line":3}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"70","location":{"end":{"column":18,"line":8},"start":{"column":12,"line":8}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"69","location":{"end":{"column":15,"line":7},"start":{"column":12,"line":7}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"}],"source":"const express = require('express');\nconst {getAllAlbums, getAlbum} = require('./albums.controller');\nconst respond = require('../controller');\n\nconst router = express.Router();\n\nrouter.get('/', respond(getAllAlbums));\nrouter.get('/:id', respond(getAlbum));\n\nmodule.exports = router;\n\n"},"/home/ana/dev/entrevista_wolox/js_app/api/albums/albums.test.js":{"language":"javascript","mutants":[{"id":"71","location":{"end":{"column":32,"line":1},"start":{"column":24,"line":1}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"72","location":{"end":{"column":38,"line":2},"start":{"column":24,"line":2}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"73","location":{"end":{"column":63,"line":3},"start":{"column":42,"line":3}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"74","location":{"end":{"column":30,"line":4},"start":{"column":24,"line":4}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"75","location":{"end":{"column":28,"line":5},"start":{"column":22,"line":5}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"76","location":{"end":{"column":2,"line":36},"start":{"column":23,"line":7}},"mutatorName":"ArrayLiteral","replacement":"[]","status":"NoCoverage"},{"id":"77","location":{"end":{"column":4,"line":14},"start":{"column":3,"line":8}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"78","location":{"end":{"column":64,"line":11},"start":{"column":12,"line":11}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"79","location":{"end":{"column":50,"line":12},"start":{"column":10,"line":12}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"80","location":{"end":{"column":59,"line":13},"start":{"column":19,"line":13}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"81","location":{"end":{"column":4,"line":21},"start":{"column":3,"line":15}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"82","location":{"end":{"column":52,"line":18},"start":{"column":12,"line":18}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"83","location":{"end":{"column":50,"line":19},"start":{"column":10,"line":19}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"84","location":{"end":{"column":59,"line":20},"start":{"column":19,"line":20}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"85","location":{"end":{"column":4,"line":28},"start":{"column":3,"line":22}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"86","location":{"end":{"column":60,"line":25},"start":{"column":12,"line":25}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"87","location":{"end":{"column":50,"line":26},"start":{"column":10,"line":26}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"88","location":{"end":{"column":59,"line":27},"start":{"column":19,"line":27}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"89","location":{"end":{"column":4,"line":35},"start":{"column":3,"line":29}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"90","location":{"end":{"column":74,"line":32},"start":{"column":12,"line":32}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"91","location":{"end":{"column":50,"line":33},"start":{"column":10,"line":33}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"92","location":{"end":{"column":59,"line":34},"start":{"column":19,"line":34}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"93","location":{"end":{"column":18,"line":37},"start":{"column":10,"line":37}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"94","location":{"end":{"column":2,"line":75},"start":{"column":32,"line":37}},"mutatorName":"Block","replacement":"{}","status":"NoCoverage"},{"id":"95","location":{"end":{"column":66,"line":38},"start":{"column":6,"line":38}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"96","location":{"end":{"column":4,"line":47},"start":{"column":80,"line":38}},"mutatorName":"Block","replacement":"{}","status":"NoCoverage"},{"id":"97","location":{"end":{"column":51,"line":39},"start":{"column":10,"line":39}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"98","location":{"end":{"column":76,"line":39},"start":{"column":53,"line":39}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"99","location":{"end":{"column":74,"line":39},"start":{"column":70,"line":39}},"mutatorName":"BooleanSubstitution","replacement":"false","status":"NoCoverage"},{"id":"100","location":{"end":{"column":15,"line":40},"start":{"column":12,"line":40}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"101","location":{"end":{"column":8,"line":46},"start":{"column":18,"line":44}},"mutatorName":"Block","replacement":"{}","status":"NoCoverage"},{"id":"102","location":{"end":{"column":43,"line":49},"start":{"column":6,"line":49}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"103","location":{"end":{"column":4,"line":60},"start":{"column":57,"line":49}},"mutatorName":"Block","replacement":"{}","status":"NoCoverage"},{"id":"104","location":{"end":{"column":51,"line":50},"start":{"column":10,"line":50}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"105","location":{"end":{"column":76,"line":50},"start":{"column":53,"line":50}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"106","location":{"end":{"column":74,"line":50},"start":{"column":70,"line":50}},"mutatorName":"BooleanSubstitution","replacement":"false","status":"NoCoverage"},{"id":"107","location":{"end":{"column":15,"line":51},"start":{"column":12,"line":51}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"108","location":{"end":{"column":105,"line":54},"start":{"column":23,"line":54}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"109","location":{"end":{"column":104,"line":54},"start":{"column":31,"line":54}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"110","location":{"end":{"column":46,"line":54},"start":{"column":39,"line":54}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"111","location":{"end":{"column":103,"line":54},"start":{"column":55,"line":54}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"112","location":{"end":{"column":8,"line":59},"start":{"column":18,"line":57}},"mutatorName":"Block","replacement":"{}","status":"NoCoverage"},{"id":"113","location":{"end":{"column":109,"line":58},"start":{"column":59,"line":58}},"mutatorName":"BinaryExpression","replacement":"e[mockQuery.query.field] !== mockQuery.query.value","status":"NoCoverage"},{"id":"114","location":{"end":{"column":109,"line":58},"start":{"column":59,"line":58}},"mutatorName":"ConditionalExpression","replacement":"false","status":"NoCoverage"},{"id":"115","location":{"end":{"column":109,"line":58},"start":{"column":59,"line":58}},"mutatorName":"ConditionalExpression","replacement":"true","status":"NoCoverage"},{"id":"116","location":{"end":{"column":58,"line":62},"start":{"column":6,"line":62}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"117","location":{"end":{"column":4,"line":74},"start":{"column":72,"line":62}},"mutatorName":"Block","replacement":"{}","status":"NoCoverage"},{"id":"118","location":{"end":{"column":24,"line":63},"start":{"column":21,"line":63}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"119","location":{"end":{"column":52,"line":64},"start":{"column":10,"line":64}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"120","location":{"end":{"column":77,"line":64},"start":{"column":54,"line":64}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"121","location":{"end":{"column":75,"line":64},"start":{"column":71,"line":64}},"mutatorName":"BooleanSubstitution","replacement":"false","status":"NoCoverage"},{"id":"122","location":{"end":{"column":25,"line":65},"start":{"column":12,"line":65}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"123","location":{"end":{"column":71,"line":66},"start":{"column":45,"line":66}},"mutatorName":"BinaryExpression","replacement":"e.id !== parseInt(albumId)","status":"NoCoverage"},{"id":"124","location":{"end":{"column":71,"line":66},"start":{"column":45,"line":66}},"mutatorName":"ConditionalExpression","replacement":"false","status":"NoCoverage"},{"id":"125","location":{"end":{"column":71,"line":66},"start":{"column":45,"line":66}},"mutatorName":"ConditionalExpression","replacement":"true","status":"NoCoverage"},{"id":"126","location":{"end":{"column":43,"line":68},"start":{"column":21,"line":68}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"127","location":{"end":{"column":42,"line":68},"start":{"column":30,"line":68}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"128","location":{"end":{"column":8,"line":73},"start":{"column":18,"line":71}},"mutatorName":"Block","replacement":"{}","status":"NoCoverage"},{"id":"129","location":{"end":{"column":85,"line":72},"start":{"column":59,"line":72}},"mutatorName":"BinaryExpression","replacement":"e.id !== parseInt(albumId)","status":"NoCoverage"},{"id":"130","location":{"end":{"column":85,"line":72},"start":{"column":59,"line":72}},"mutatorName":"ConditionalExpression","replacement":"false","status":"NoCoverage"},{"id":"131","location":{"end":{"column":85,"line":72},"start":{"column":59,"line":72}},"mutatorName":"ConditionalExpression","replacement":"true","status":"NoCoverage"}],"source":"const assert = require('assert');\nconst config = require('../../config');\nconst {getAllAlbums, getAlbum} = require('./albums.controller');\nconst expect = require('chai').expect;\nconst nock = require('nock');\n\nconst defaultAlbums = [\n  {\n    albumId: 1,\n    id: 1,\n    title: \"accusamus beatae ad facilis cum similique qui sunt\",\n    url: \"https://via.placeholder.com/600/92c952\",\n    thumbnailUrl: \"https://via.placeholder.com/150/92c952\"\n  },\n  {\n    albumId: 1,\n    id: 2,\n    title: \"reprehenderit est deserunt velit ipsam\",\n    url: \"https://via.placeholder.com/600/771796\",\n    thumbnailUrl: \"https://via.placeholder.com/150/771796\"\n  },\n  {\n    albumId: 1,\n    id: 3,\n    title: \"officia porro iure quia iusto qui ipsa ut modi\",\n    url: \"https://via.placeholder.com/600/24f355\",\n    thumbnailUrl: \"https://via.placeholder.com/150/24f355\"\n  },\n  {\n    albumId: 1,\n    id: 4,\n    title: \"culpa odio esse rerum omnis laboriosam voluptate repudiandae\",\n    url: \"https://via.placeholder.com/600/d32776\",\n    thumbnailUrl: \"https://via.placeholder.com/150/d32776\"\n  }\n];\ndescribe('Albums', function () {\n  it('getAllAlbums should return user list from external service', function () {\n    nock(`${config.jsonplaceholder.domain}/albums`, { allowUnmocked: true })\n      .get('/')\n      .reply(200, defaultAlbums);\n\n    return getAllAlbums()\n      .then(e => {\n        expect(e).to.deep.equal(defaultAlbums)\n      })\n  });\n\n  it('getAllAlbums should filter by title', function () {\n    nock(`${config.jsonplaceholder.domain}/albums`, { allowUnmocked: true })\n      .get('/')\n      .reply(200,defaultAlbums);\n\n    const mockQuery = {query: {field: 'title', value: 'officia porro iure quia iusto qui ipsa ut modi'}};\n\n    return getAllAlbums(mockQuery)\n      .then(e => {\n        expect(e).to.deep.equal(defaultAlbums.filter(e => e[mockQuery.query.field] === mockQuery.query.value))\n      })\n  });\n\n  it('getAlbum should return user mathcing with given ID', function () {\n    const albumId = '1';\n    nock(`${config.jsonplaceholder.domain}/albums/`, { allowUnmocked: true })\n      .get(`/${albumId}`)\n      .reply(200, defaultAlbums.filter(e => e.id === parseInt(albumId)));\n\n    const mockReq = {params: {id:albumId}};\n\n    return getAlbum(mockReq)\n      .then(e => {\n        expect(e).to.deep.equal(defaultAlbums.filter(e => e.id === parseInt(albumId)))\n      })\n  });\n});\n"},"/home/ana/dev/entrevista_wolox/js_app/api/comments/comments.client.js":{"language":"javascript","mutants":[{"id":"132","location":{"end":{"column":30,"line":1},"start":{"column":23,"line":1}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"133","location":{"end":{"column":40,"line":2},"start":{"column":27,"line":2}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"134","location":{"end":{"column":47,"line":3},"start":{"column":26,"line":3}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"135","location":{"end":{"column":47,"line":7},"start":{"column":39,"line":7}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"137","location":{"end":{"column":46,"line":10},"start":{"column":18,"line":10}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"136","location":{"end":{"column":44,"line":8},"start":{"column":41,"line":8}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"}],"source":"const axios = require('axios');\nconst {getData} = require('../../utils');\nconst endpoint = require('./comments.endpoint');\n\nconst client = axios.create(endpoint);\n\nconst getComment = (id) => client.get(`/${id}`).then(getData);\nconst getAllComments = () => client.get('/').then(getData);\n\nmodule.exports = {getComment, getAllComments};"},"/home/ana/dev/entrevista_wolox/js_app/api/comments/comments.controller.js":{"language":"javascript","mutants":[{"id":"138","location":{"end":{"column":58,"line":1},"start":{"column":40,"line":1}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"140","location":{"end":{"column":52,"line":6},"start":{"column":17,"line":6}},"mutatorName":"BinaryExpression","replacement":"req && req.query || req.query.field","status":"Killed"},{"id":"141","location":{"end":{"column":52,"line":6},"start":{"column":17,"line":6}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"139","location":{"end":{"column":2,"line":9},"start":{"column":38,"line":5}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"143","location":{"end":{"column":33,"line":6},"start":{"column":17,"line":6}},"mutatorName":"BinaryExpression","replacement":"req || req.query","status":"Killed"},{"id":"142","location":{"end":{"column":52,"line":6},"start":{"column":17,"line":6}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"144","location":{"end":{"column":33,"line":6},"start":{"column":17,"line":6}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"146","location":{"end":{"column":52,"line":7},"start":{"column":17,"line":7}},"mutatorName":"BinaryExpression","replacement":"req && req.query || req.query.value","status":"Killed"},{"id":"148","location":{"end":{"column":52,"line":7},"start":{"column":17,"line":7}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"147","location":{"end":{"column":52,"line":7},"start":{"column":17,"line":7}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"149","location":{"end":{"column":33,"line":7},"start":{"column":17,"line":7}},"mutatorName":"BinaryExpression","replacement":"req || req.query","status":"Killed"},{"id":"152","location":{"end":{"column":36,"line":8},"start":{"column":22,"line":8}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"151","location":{"end":{"column":33,"line":7},"start":{"column":17,"line":7}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"150","location":{"end":{"column":33,"line":7},"start":{"column":17,"line":7}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"145","location":{"end":{"column":33,"line":6},"start":{"column":17,"line":6}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"153","location":{"end":{"column":46,"line":11},"start":{"column":18,"line":11}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"}],"source":"const {comment, allComments} = require('./comments.model');\n\nconst getComment = (req) => comment(req.params.id);\n\nconst getAllComments= async (req) => {\n  const field = req && req.query && req.query.field;\n  const value = req && req.query && req.query.value;\n  return allComments({field, value})\n};\n\nmodule.exports = {getAllComments, getComment};"},"/home/ana/dev/entrevista_wolox/js_app/api/comments/comments.endpoint.js":{"language":"javascript","mutants":[{"id":"154","location":{"end":{"column":38,"line":1},"start":{"column":24,"line":1}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"156","location":{"end":{"column":55,"line":4},"start":{"column":12,"line":4}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"155","location":{"end":{"column":2,"line":6},"start":{"column":18,"line":3}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"}],"source":"const config = require('../../config');\n\nmodule.exports = {\n  baseURL: `${config.jsonplaceholder.domain}/comments`,\n  timeout: 5000\n};"},"/home/ana/dev/entrevista_wolox/js_app/api/comments/comments.model.js":{"language":"javascript","mutants":[{"id":"157","location":{"end":{"column":43,"line":1},"start":{"column":24,"line":1}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"158","location":{"end":{"column":70,"line":2},"start":{"column":57,"line":2}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"159","location":{"end":{"column":52,"line":3},"start":{"column":31,"line":3}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"160","location":{"end":{"column":50,"line":4},"start":{"column":28,"line":4}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"162","location":{"end":{"column":4,"line":13},"start":{"column":18,"line":10}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"163","location":{"end":{"column":19,"line":12},"start":{"column":12,"line":12}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"161","location":{"end":{"column":2,"line":15},"start":{"column":51,"line":8}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"164","location":{"end":{"column":2,"line":37},"start":{"column":47,"line":17}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"166","location":{"end":{"column":45,"line":20},"start":{"column":7,"line":20}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"165","location":{"end":{"column":45,"line":20},"start":{"column":7,"line":20}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"170","location":{"end":{"column":23,"line":20},"start":{"column":8,"line":20}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"171","location":{"end":{"column":23,"line":20},"start":{"column":17,"line":20}},"mutatorName":"PrefixUnaryExpression","replacement":"value","status":"Killed"},{"id":"168","location":{"end":{"column":23,"line":20},"start":{"column":8,"line":20}},"mutatorName":"BinaryExpression","replacement":"field || !value","status":"Killed"},{"id":"167","location":{"end":{"column":45,"line":20},"start":{"column":7,"line":20}},"mutatorName":"BinaryExpression","replacement":"field && !value && !field && value","status":"Killed"},{"id":"172","location":{"end":{"column":44,"line":20},"start":{"column":29,"line":20}},"mutatorName":"BinaryExpression","replacement":"!field || value","status":"Killed"},{"id":"174","location":{"end":{"column":44,"line":20},"start":{"column":29,"line":20}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"173","location":{"end":{"column":44,"line":20},"start":{"column":29,"line":20}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"169","location":{"end":{"column":23,"line":20},"start":{"column":8,"line":20}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"176","location":{"end":{"column":113,"line":20},"start":{"column":53,"line":20}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"178","location":{"end":{"column":112,"line":20},"start":{"column":100,"line":20}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"175","location":{"end":{"column":35,"line":20},"start":{"column":29,"line":20}},"mutatorName":"PrefixUnaryExpression","replacement":"field","status":"Killed"},{"id":"179","location":{"end":{"column":25,"line":22},"start":{"column":7,"line":22}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"177","location":{"end":{"column":92,"line":20},"start":{"column":61,"line":20}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"183","location":{"end":{"column":64,"line":22},"start":{"column":47,"line":22}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"181","location":{"end":{"column":25,"line":22},"start":{"column":7,"line":22}},"mutatorName":"BinaryExpression","replacement":"field !== 'userId'","status":"Killed"},{"id":"180","location":{"end":{"column":25,"line":22},"start":{"column":7,"line":22}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"185","location":{"end":{"column":70,"line":24},"start":{"column":7,"line":24}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"186","location":{"end":{"column":70,"line":24},"start":{"column":7,"line":24}},"mutatorName":"BinaryExpression","replacement":"field && value || !findValueByKeyInObject(commentFormat, field)","status":"Killed"},{"id":"187","location":{"end":{"column":21,"line":24},"start":{"column":7,"line":24}},"mutatorName":"BinaryExpression","replacement":"field || value","status":"Killed"},{"id":"188","location":{"end":{"column":21,"line":24},"start":{"column":7,"line":24}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"190","location":{"end":{"column":70,"line":24},"start":{"column":25,"line":24}},"mutatorName":"PrefixUnaryExpression","replacement":"findValueByKeyInObject(commentFormat, field)","status":"Killed"},{"id":"189","location":{"end":{"column":21,"line":24},"start":{"column":7,"line":24}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"184","location":{"end":{"column":70,"line":24},"start":{"column":7,"line":24}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"193","location":{"end":{"column":172,"line":24},"start":{"column":160,"line":24}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"192","location":{"end":{"column":152,"line":24},"start":{"column":86,"line":24}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"182","location":{"end":{"column":25,"line":22},"start":{"column":17,"line":22}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"194","location":{"end":{"column":52,"line":26},"start":{"column":38,"line":26}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"191","location":{"end":{"column":173,"line":24},"start":{"column":78,"line":24}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"195","location":{"end":{"column":19,"line":28},"start":{"column":7,"line":28}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"197","location":{"end":{"column":4,"line":34},"start":{"column":21,"line":28}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"198","location":{"end":{"column":30,"line":31},"start":{"column":9,"line":31}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"196","location":{"end":{"column":19,"line":28},"start":{"column":7,"line":28}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"199","location":{"end":{"column":30,"line":31},"start":{"column":9,"line":31}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"203","location":{"end":{"column":92,"line":31},"start":{"column":81,"line":31}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"200","location":{"end":{"column":30,"line":31},"start":{"column":9,"line":31}},"mutatorName":"BinaryExpression","replacement":"response.length !== 0","status":"Killed"},{"id":"202","location":{"end":{"column":73,"line":31},"start":{"column":46,"line":31}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"201","location":{"end":{"column":93,"line":31},"start":{"column":38,"line":31}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"204","location":{"end":{"column":4,"line":36},"start":{"column":10,"line":34}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"205","location":{"end":{"column":40,"line":39},"start":{"column":18,"line":39}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"}],"source":"const client = require('./comments.client');\nconst {filterByValue, findValueByKeyInObject} = require('../../utils');\nconst commentFormat = require('../../utils/formats').comments;\nconst usersModel = require('../users/users.model');\n\nconst comment = client.getComment;\n\nconst userComments = async ({comments, value}) => {\n  const user = await usersModel.user(value);\n  const filter = {\n    value: user.email,\n    field: 'email'\n  };\n  return comments.filter(filterByValue(filter, commentFormat))\n};\n\nconst allComments = async ({field, value}) => {\n  const comments = await client.getAllComments();\n\n  if ((field && !value) || (!field && value)) throw {error: 'Missing either field or value', code: 'bad_format'};\n\n  if (field === 'userId') return userComments({comments, value});\n\n  if (field && value && !findValueByKeyInObject(commentFormat, field)) throw {error: 'The property you are looking for does not exist in this resourse', code: 'bad_format'};\n\n  const byFieldValue = filterByValue({field, value}, commentFormat);\n\n  if (byFieldValue) {\n    const response = comments.filter(byFieldValue);\n\n    if (response.length === 0) throw {error: 'No value matched criteria', code: 'not_found'};\n    return response\n\n  } else {\n    return  comments\n  }\n};\n\nmodule.exports = {comment, allComments};"},"/home/ana/dev/entrevista_wolox/js_app/api/comments/comments.routes.js":{"language":"javascript","mutants":[{"id":"206","location":{"end":{"column":34,"line":1},"start":{"column":25,"line":1}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"207","location":{"end":{"column":69,"line":2},"start":{"column":46,"line":2}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"208","location":{"end":{"column":40,"line":3},"start":{"column":25,"line":3}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"210","location":{"end":{"column":18,"line":8},"start":{"column":12,"line":8}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"209","location":{"end":{"column":15,"line":7},"start":{"column":12,"line":7}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"}],"source":"const express = require('express');\nconst {getAllComments, getComment} = require('./comments.controller');\nconst respond = require('../controller');\n\nconst router = express.Router();\n\nrouter.get('/', respond(getAllComments));\nrouter.get('/:id', respond(getComment));\n\nmodule.exports = router;\n\n"},"/home/ana/dev/entrevista_wolox/js_app/api/comments/comments.test.js":{"language":"javascript","mutants":[{"id":"211","location":{"end":{"column":32,"line":1},"start":{"column":24,"line":1}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"212","location":{"end":{"column":38,"line":2},"start":{"column":24,"line":2}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"213","location":{"end":{"column":69,"line":3},"start":{"column":46,"line":3}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"214","location":{"end":{"column":30,"line":4},"start":{"column":24,"line":4}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"215","location":{"end":{"column":28,"line":5},"start":{"column":22,"line":5}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"216","location":{"end":{"column":2,"line":36},"start":{"column":25,"line":7}},"mutatorName":"ArrayLiteral","replacement":"[]","status":"NoCoverage"},{"id":"217","location":{"end":{"column":4,"line":14},"start":{"column":3,"line":8}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"218","location":{"end":{"column":41,"line":11},"start":{"column":11,"line":11}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"219","location":{"end":{"column":32,"line":12},"start":{"column":12,"line":12}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"220","location":{"end":{"column":161,"line":13},"start":{"column":11,"line":13}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"221","location":{"end":{"column":4,"line":21},"start":{"column":3,"line":15}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"222","location":{"end":{"column":54,"line":18},"start":{"column":11,"line":18}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"223","location":{"end":{"column":36,"line":19},"start":{"column":12,"line":19}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"224","location":{"end":{"column":181,"line":20},"start":{"column":11,"line":20}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"225","location":{"end":{"column":4,"line":28},"start":{"column":3,"line":22}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"226","location":{"end":{"column":42,"line":25},"start":{"column":11,"line":25}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"227","location":{"end":{"column":27,"line":26},"start":{"column":12,"line":26}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"228","location":{"end":{"column":231,"line":27},"start":{"column":11,"line":27}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"229","location":{"end":{"column":4,"line":35},"start":{"column":3,"line":29}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"230","location":{"end":{"column":27,"line":32},"start":{"column":11,"line":32}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"231","location":{"end":{"column":27,"line":33},"start":{"column":12,"line":33}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"232","location":{"end":{"column":167,"line":34},"start":{"column":11,"line":34}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"233","location":{"end":{"column":3,"line":59},"start":{"column":15,"line":37}},"mutatorName":"ArrayLiteral","replacement":"[]","status":"NoCoverage"},{"id":"234","location":{"end":{"column":2,"line":59},"start":{"column":16,"line":37}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"235","location":{"end":{"column":24,"line":39},"start":{"column":9,"line":39}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"236","location":{"end":{"column":19,"line":40},"start":{"column":13,"line":40}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"237","location":{"end":{"column":25,"line":41},"start":{"column":10,"line":41}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"238","location":{"end":{"column":4,"line":51},"start":{"column":12,"line":42}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"239","location":{"end":{"column":26,"line":43},"start":{"column":13,"line":43}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"240","location":{"end":{"column":22,"line":44},"start":{"column":12,"line":44}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"241","location":{"end":{"column":24,"line":45},"start":{"column":11,"line":45}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"242","location":{"end":{"column":26,"line":46},"start":{"column":14,"line":46}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"243","location":{"end":{"column":6,"line":50},"start":{"column":10,"line":47}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"244","location":{"end":{"column":22,"line":48},"start":{"column":12,"line":48}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"245","location":{"end":{"column":21,"line":49},"start":{"column":12,"line":49}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"246","location":{"end":{"column":33,"line":52},"start":{"column":10,"line":52}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"247","location":{"end":{"column":27,"line":53},"start":{"column":12,"line":53}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"248","location":{"end":{"column":4,"line":58},"start":{"column":12,"line":54}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"249","location":{"end":{"column":28,"line":55},"start":{"column":11,"line":55}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"250","location":{"end":{"column":58,"line":56},"start":{"column":18,"line":56}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"251","location":{"end":{"column":38,"line":57},"start":{"column":9,"line":57}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"252","location":{"end":{"column":20,"line":62},"start":{"column":10,"line":62}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"253","location":{"end":{"column":2,"line":118},"start":{"column":34,"line":62}},"mutatorName":"Block","replacement":"{}","status":"NoCoverage"},{"id":"254","location":{"end":{"column":68,"line":63},"start":{"column":6,"line":63}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"255","location":{"end":{"column":4,"line":72},"start":{"column":82,"line":63}},"mutatorName":"Block","replacement":"{}","status":"NoCoverage"},{"id":"256","location":{"end":{"column":53,"line":64},"start":{"column":10,"line":64}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"257","location":{"end":{"column":78,"line":64},"start":{"column":55,"line":64}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"258","location":{"end":{"column":76,"line":64},"start":{"column":72,"line":64}},"mutatorName":"BooleanSubstitution","replacement":"false","status":"NoCoverage"},{"id":"259","location":{"end":{"column":15,"line":65},"start":{"column":12,"line":65}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"260","location":{"end":{"column":8,"line":71},"start":{"column":18,"line":69}},"mutatorName":"Block","replacement":"{}","status":"NoCoverage"},{"id":"261","location":{"end":{"column":45,"line":74},"start":{"column":6,"line":74}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"262","location":{"end":{"column":4,"line":85},"start":{"column":59,"line":74}},"mutatorName":"Block","replacement":"{}","status":"NoCoverage"},{"id":"263","location":{"end":{"column":53,"line":75},"start":{"column":10,"line":75}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"264","location":{"end":{"column":78,"line":75},"start":{"column":55,"line":75}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"265","location":{"end":{"column":76,"line":75},"start":{"column":72,"line":75}},"mutatorName":"BooleanSubstitution","replacement":"false","status":"NoCoverage"},{"id":"266","location":{"end":{"column":15,"line":76},"start":{"column":12,"line":76}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"267","location":{"end":{"column":77,"line":79},"start":{"column":23,"line":79}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"268","location":{"end":{"column":76,"line":79},"start":{"column":31,"line":79}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"269","location":{"end":{"column":46,"line":79},"start":{"column":39,"line":79}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"270","location":{"end":{"column":75,"line":79},"start":{"column":55,"line":79}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"271","location":{"end":{"column":8,"line":84},"start":{"column":18,"line":82}},"mutatorName":"Block","replacement":"{}","status":"NoCoverage"},{"id":"272","location":{"end":{"column":111,"line":83},"start":{"column":61,"line":83}},"mutatorName":"BinaryExpression","replacement":"e[mockQuery.query.field] !== mockQuery.query.value","status":"NoCoverage"},{"id":"273","location":{"end":{"column":111,"line":83},"start":{"column":61,"line":83}},"mutatorName":"ConditionalExpression","replacement":"false","status":"NoCoverage"},{"id":"274","location":{"end":{"column":111,"line":83},"start":{"column":61,"line":83}},"mutatorName":"ConditionalExpression","replacement":"true","status":"NoCoverage"},{"id":"275","location":{"end":{"column":46,"line":87},"start":{"column":6,"line":87}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"276","location":{"end":{"column":4,"line":103},"start":{"column":60,"line":87}},"mutatorName":"Block","replacement":"{}","status":"NoCoverage"},{"id":"277","location":{"end":{"column":53,"line":89},"start":{"column":10,"line":89}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"278","location":{"end":{"column":78,"line":89},"start":{"column":55,"line":89}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"279","location":{"end":{"column":76,"line":89},"start":{"column":72,"line":89}},"mutatorName":"BooleanSubstitution","replacement":"false","status":"NoCoverage"},{"id":"280","location":{"end":{"column":15,"line":90},"start":{"column":12,"line":90}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"281","location":{"end":{"column":50,"line":93},"start":{"column":10,"line":93}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"282","location":{"end":{"column":75,"line":93},"start":{"column":52,"line":93}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"283","location":{"end":{"column":73,"line":93},"start":{"column":69,"line":93}},"mutatorName":"BooleanSubstitution","replacement":"false","status":"NoCoverage"},{"id":"284","location":{"end":{"column":16,"line":94},"start":{"column":12,"line":94}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"285","location":{"end":{"column":69,"line":97},"start":{"column":23,"line":97}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"286","location":{"end":{"column":68,"line":97},"start":{"column":31,"line":97}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"287","location":{"end":{"column":47,"line":97},"start":{"column":39,"line":97}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"288","location":{"end":{"column":8,"line":102},"start":{"column":18,"line":100}},"mutatorName":"Block","replacement":"{}","status":"NoCoverage"},{"id":"289","location":{"end":{"column":87,"line":101},"start":{"column":61,"line":101}},"mutatorName":"BinaryExpression","replacement":"e.email !== users[0].email","status":"NoCoverage"},{"id":"290","location":{"end":{"column":87,"line":101},"start":{"column":61,"line":101}},"mutatorName":"ConditionalExpression","replacement":"false","status":"NoCoverage"},{"id":"291","location":{"end":{"column":87,"line":101},"start":{"column":61,"line":101}},"mutatorName":"ConditionalExpression","replacement":"true","status":"NoCoverage"},{"id":"292","location":{"end":{"column":60,"line":105},"start":{"column":6,"line":105}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"293","location":{"end":{"column":4,"line":117},"start":{"column":74,"line":105}},"mutatorName":"Block","replacement":"{}","status":"NoCoverage"},{"id":"294","location":{"end":{"column":26,"line":106},"start":{"column":23,"line":106}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"295","location":{"end":{"column":54,"line":107},"start":{"column":10,"line":107}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"296","location":{"end":{"column":79,"line":107},"start":{"column":56,"line":107}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"297","location":{"end":{"column":77,"line":107},"start":{"column":73,"line":107}},"mutatorName":"BooleanSubstitution","replacement":"false","status":"NoCoverage"},{"id":"298","location":{"end":{"column":27,"line":108},"start":{"column":12,"line":108}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"299","location":{"end":{"column":75,"line":109},"start":{"column":47,"line":109}},"mutatorName":"BinaryExpression","replacement":"e.id !== parseInt(commentId)","status":"NoCoverage"},{"id":"300","location":{"end":{"column":75,"line":109},"start":{"column":47,"line":109}},"mutatorName":"ConditionalExpression","replacement":"false","status":"NoCoverage"},{"id":"301","location":{"end":{"column":75,"line":109},"start":{"column":47,"line":109}},"mutatorName":"ConditionalExpression","replacement":"true","status":"NoCoverage"},{"id":"302","location":{"end":{"column":45,"line":111},"start":{"column":21,"line":111}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"303","location":{"end":{"column":44,"line":111},"start":{"column":30,"line":111}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"304","location":{"end":{"column":8,"line":116},"start":{"column":18,"line":114}},"mutatorName":"Block","replacement":"{}","status":"NoCoverage"},{"id":"305","location":{"end":{"column":89,"line":115},"start":{"column":61,"line":115}},"mutatorName":"BinaryExpression","replacement":"e.id !== parseInt(commentId)","status":"NoCoverage"},{"id":"306","location":{"end":{"column":89,"line":115},"start":{"column":61,"line":115}},"mutatorName":"ConditionalExpression","replacement":"false","status":"NoCoverage"},{"id":"307","location":{"end":{"column":89,"line":115},"start":{"column":61,"line":115}},"mutatorName":"ConditionalExpression","replacement":"true","status":"NoCoverage"}],"source":"const assert = require('assert');\nconst config = require('../../config');\nconst {getComment, getAllComments} = require('./comments.controller');\nconst expect = require('chai').expect;\nconst nock = require('nock');\n\nconst defaultComments = [\n  {\n    postId: 1,\n    id: 1,\n    name: \"id labore ex et quam laborum\",\n    email: \"Eliseo@gardner.biz\",\n    body: \"laudantium enim quasi est quidem magnam voluptate ipsam eos tempora quo necessitatibus dolor quam autem quasi reiciendis et nam sapiente accusantium\"\n  },\n  {\n    postId: 1,\n    id: 2,\n    name: \"quo vero reiciendis velit similique earum\",\n    email: \"Jayne_Kuhic@sydney.com\",\n    body: \"est natus enim nihil est dolore omnis voluptatem numquam et omnis occaecati quod ullam at voluptatem error expedita pariatur nihil sint nostrum voluptatem reiciendis et\"\n  },\n  {\n    postId: 1,\n    id: 3,\n    name: \"odio adipisci rerum aut animi\",\n    email: \"Lew@alysha.tv\",\n    body: \"quia molestiae reprehenderit quasi aspernatur aut expedita occaecati aliquam eveniet laudantium omnis quibusdam delectus saepe quia accusamus maiores nam est cum et ducimus et vero voluptates excepturi deleniti ratione\"\n  },\n  {\n    postId: 1,\n    id: 4,\n    name: \"alias odio sit\",\n    email: \"Lew@alysha.tv\",\n    body: \"non et atque occaecati deserunt quas accusantium unde odit nobis qui voluptatem quia voluptas consequuntur itaque dolor et qui rerum deleniti ut occaecati\"\n  }\n];\nconst users = [{\n  id: 1,\n  name: \"Leanne Graham\",\n  username: \"Bret\",\n  email: \"Lew@alysha.tv\",\n  address: {\n    street: \"Kulas Light\",\n    suite: \"Apt. 556\",\n    city: \"Gwenborough\",\n    zipcode: \"92998-3874\",\n    geo: {\n      lat: \"-37.3159\",\n      lng: \"81.1496\"\n    }\n  },\n  phone: \"1-770-736-8031 x56442\",\n  website: \"hildegard.org\",\n  company: {\n    name: \"Romaguera-Crona\",\n    catchPhrase: \"Multi-layered client-server neural-net\",\n    bs: \"harness real-time e-markets\"\n  }\n}];\n\n\ndescribe('Comments', function () {\n  it('getAllComments should return user list from external service', function () {\n    nock(`${config.jsonplaceholder.domain}/comments`, { allowUnmocked: true })\n      .get('/')\n      .reply(200, defaultComments);\n\n    return getAllComments()\n      .then(e => {\n        expect(e).to.deep.equal(defaultComments)\n      })\n  });\n\n  it('getAllComments should filter by email', function () {\n    nock(`${config.jsonplaceholder.domain}/comments`, { allowUnmocked: true })\n      .get('/')\n      .reply(200,defaultComments);\n\n    const mockQuery = {query: {field: 'email', value: 'Eliseo@gardner.biz'}};\n\n    return getAllComments(mockQuery)\n      .then(e => {\n        expect(e).to.deep.equal(defaultComments.filter(e => e[mockQuery.query.field] === mockQuery.query.value))\n      })\n  });\n\n  it('getAllComments should filter by userId', function () {\n\n    nock(`${config.jsonplaceholder.domain}/comments`, { allowUnmocked: true })\n      .get('/')\n      .reply(200, defaultComments);\n\n    nock(`${config.jsonplaceholder.domain}/users`, { allowUnmocked: true })\n      .get('/1')\n      .reply(200, users[0]);\n\n    const mockQuery = {query: {field: 'userId', value: users[0].id}};\n\n    return getAllComments(mockQuery)\n      .then(e => {\n        expect(e).to.deep.equal(defaultComments.filter(e => e.email === users[0].email))\n      })\n  });\n\n  it('getComment should return user mathcing with given ID', function () {\n    const commentId = '1';\n    nock(`${config.jsonplaceholder.domain}/comments/`, { allowUnmocked: true })\n      .get(`/${commentId}`)\n      .reply(200, defaultComments.filter(e => e.id === parseInt(commentId)));\n\n    const mockReq = {params: {id:commentId}};\n\n    return getComment(mockReq)\n      .then(e => {\n        expect(e).to.deep.equal(defaultComments.filter(e => e.id === parseInt(commentId)))\n      })\n  });\n});\n"},"/home/ana/dev/entrevista_wolox/js_app/api/controller.js":{"language":"javascript","mutants":[{"id":"311","location":{"end":{"column":59,"line":6},"start":{"column":50,"line":6}},"mutatorName":"ArrayLiteral","replacement":"[]","status":"Killed"},{"id":"308","location":{"end":{"column":2,"line":4},"start":{"column":20,"line":1}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"309","location":{"end":{"column":14,"line":2},"start":{"column":3,"line":2}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"314","location":{"end":{"column":99,"line":12},"start":{"column":16,"line":12}},"mutatorName":"BinaryExpression","replacement":"(httpStatus[error.code] || error && error.response && error.response.status) && 500","status":"Killed"},{"id":"312","location":{"end":{"column":4,"line":9},"start":{"column":23,"line":7}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"313","location":{"end":{"column":4,"line":14},"start":{"column":19,"line":10}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"310","location":{"end":{"column":15,"line":3},"start":{"column":3,"line":3}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"315","location":{"end":{"column":99,"line":12},"start":{"column":16,"line":12}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"317","location":{"end":{"column":92,"line":12},"start":{"column":16,"line":12}},"mutatorName":"BinaryExpression","replacement":"httpStatus[error.code] && error && error.response && error.response.status","status":"Killed"},{"id":"319","location":{"end":{"column":92,"line":12},"start":{"column":16,"line":12}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"318","location":{"end":{"column":92,"line":12},"start":{"column":16,"line":12}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"316","location":{"end":{"column":99,"line":12},"start":{"column":16,"line":12}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"320","location":{"end":{"column":91,"line":12},"start":{"column":43,"line":12}},"mutatorName":"BinaryExpression","replacement":"error && error.response || error.response.status","status":"Killed"},{"id":"321","location":{"end":{"column":91,"line":12},"start":{"column":43,"line":12}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"322","location":{"end":{"column":91,"line":12},"start":{"column":43,"line":12}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"324","location":{"end":{"column":66,"line":12},"start":{"column":43,"line":12}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"323","location":{"end":{"column":66,"line":12},"start":{"column":43,"line":12}},"mutatorName":"BinaryExpression","replacement":"error || error.response","status":"Killed"},{"id":"326","location":{"end":{"column":34,"line":13},"start":{"column":14,"line":13}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"325","location":{"end":{"column":66,"line":12},"start":{"column":43,"line":12}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"}],"source":"const httpStatus = {\n  'not_found':404,\n  'bad_format':400\n};\n\nmodule.exports = fn => (req, res) => Promise.all([fn(req)])\n  .then(([result]) => {\n    res.json(result)\n  })\n  .catch(error => {\n    console.error(error);\n    res.status(httpStatus[error.code] || (error && error.response && error.response.status) || 500);\n    res.json({msg: error.message})\n  });"},"/home/ana/dev/entrevista_wolox/js_app/api/index.js":{"language":"javascript","mutants":[{"id":"327","location":{"end":{"column":34,"line":1},"start":{"column":25,"line":1}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"328","location":{"end":{"column":82,"line":2},"start":{"column":72,"line":2}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"329","location":{"end":{"column":2,"line":14},"start":{"column":26,"line":4}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"330","location":{"end":{"column":22,"line":6},"start":{"column":14,"line":6}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"331","location":{"end":{"column":23,"line":7},"start":{"column":14,"line":7}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"332","location":{"end":{"column":23,"line":8},"start":{"column":14,"line":8}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"334","location":{"end":{"column":25,"line":10},"start":{"column":14,"line":10}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"333","location":{"end":{"column":23,"line":9},"start":{"column":15,"line":9}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"335","location":{"end":{"column":29,"line":11},"start":{"column":14,"line":11}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"}],"source":"const express = require('express');\nconst {users, photos, albums, posts, comments, sharedAlbums} = require('./routes');\n\nmodule.exports = (db) => {\n  const router = express.Router();\n  router.use('/users', users);\n  router.use('/photos', photos);\n  router.use('/albums', albums);\n  router.use ('/posts', posts);\n  router.use('/comments', comments);\n  router.use('/sharedAlbums', sharedAlbums(db));\n\n  return router;\n};"},"/home/ana/dev/entrevista_wolox/js_app/api/photos/photos.client.js":{"language":"javascript","mutants":[{"id":"336","location":{"end":{"column":30,"line":1},"start":{"column":23,"line":1}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"337","location":{"end":{"column":40,"line":2},"start":{"column":27,"line":2}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"338","location":{"end":{"column":45,"line":3},"start":{"column":26,"line":3}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"341","location":{"end":{"column":42,"line":10},"start":{"column":18,"line":10}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"339","location":{"end":{"column":45,"line":7},"start":{"column":37,"line":7}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"340","location":{"end":{"column":42,"line":8},"start":{"column":39,"line":8}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"}],"source":"const axios = require('axios');\nconst {getData} = require('../../utils');\nconst endpoint = require('./photos.endpoint');\n\nconst client = axios.create(endpoint);\n\nconst getPhoto = (id) => client.get(`/${id}`).then(getData);\nconst getAllPhotos = () => client.get('/').then(getData);\n\nmodule.exports = {getPhoto, getAllPhotos};"},"/home/ana/dev/entrevista_wolox/js_app/api/photos/photos.controller.js":{"language":"javascript","mutants":[{"id":"342","location":{"end":{"column":55,"line":1},"start":{"column":36,"line":1}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"344","location":{"end":{"column":52,"line":6},"start":{"column":17,"line":6}},"mutatorName":"BinaryExpression","replacement":"req && req.query || req.query.field","status":"Killed"},{"id":"343","location":{"end":{"column":2,"line":9},"start":{"column":37,"line":5}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"346","location":{"end":{"column":52,"line":6},"start":{"column":17,"line":6}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"347","location":{"end":{"column":33,"line":6},"start":{"column":17,"line":6}},"mutatorName":"BinaryExpression","replacement":"req || req.query","status":"Killed"},{"id":"345","location":{"end":{"column":52,"line":6},"start":{"column":17,"line":6}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"351","location":{"end":{"column":52,"line":7},"start":{"column":17,"line":7}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"350","location":{"end":{"column":52,"line":7},"start":{"column":17,"line":7}},"mutatorName":"BinaryExpression","replacement":"req && req.query || req.query.value","status":"Killed"},{"id":"352","location":{"end":{"column":52,"line":7},"start":{"column":17,"line":7}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"348","location":{"end":{"column":33,"line":6},"start":{"column":17,"line":6}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"353","location":{"end":{"column":33,"line":7},"start":{"column":17,"line":7}},"mutatorName":"BinaryExpression","replacement":"req || req.query","status":"Killed"},{"id":"354","location":{"end":{"column":33,"line":7},"start":{"column":17,"line":7}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"356","location":{"end":{"column":34,"line":8},"start":{"column":20,"line":8}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"349","location":{"end":{"column":33,"line":6},"start":{"column":17,"line":6}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"357","location":{"end":{"column":42,"line":11},"start":{"column":18,"line":11}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"355","location":{"end":{"column":33,"line":7},"start":{"column":17,"line":7}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"}],"source":"const {photo, allPhotos} = require('./photos.services');\n\nconst getPhoto = (req) => photo(req.params.id);\n\nconst getAllPhotos = async (req) => {\n  const field = req && req.query && req.query.field;\n  const value = req && req.query && req.query.value;\n  return allPhotos({field, value})\n};\n\nmodule.exports = {getAllPhotos, getPhoto};"},"/home/ana/dev/entrevista_wolox/js_app/api/photos/photos.endpoint.js":{"language":"javascript","mutants":[{"id":"358","location":{"end":{"column":38,"line":1},"start":{"column":24,"line":1}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"359","location":{"end":{"column":2,"line":6},"start":{"column":18,"line":3}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"360","location":{"end":{"column":53,"line":4},"start":{"column":12,"line":4}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"}],"source":"const config = require('../../config');\n\nmodule.exports = {\n  baseURL: `${config.jsonplaceholder.domain}/photos`,\n  timeout: 5000\n};"},"/home/ana/dev/entrevista_wolox/js_app/api/photos/photos.filter.js":{"language":"javascript","mutants":[{"id":"361","location":{"end":{"column":70,"line":1},"start":{"column":57,"line":1}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"362","location":{"end":{"column":50,"line":2},"start":{"column":29,"line":2}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"363","location":{"end":{"column":55,"line":3},"start":{"column":31,"line":3}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"365","location":{"end":{"column":66,"line":6},"start":{"column":52,"line":6}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"366","location":{"end":{"column":4,"line":10},"start":{"column":47,"line":8}},"mutatorName":"Block","replacement":"{}","status":"NoCoverage"},{"id":"367","location":{"end":{"column":89,"line":9},"start":{"column":54,"line":9}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"368","location":{"end":{"column":71,"line":9},"start":{"column":62,"line":9}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"369","location":{"end":{"column":2,"line":31},"start":{"column":48,"line":13}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"364","location":{"end":{"column":2,"line":11},"start":{"column":52,"line":5}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"371","location":{"end":{"column":25,"line":15},"start":{"column":7,"line":15}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"374","location":{"end":{"column":68,"line":18},"start":{"column":7,"line":18}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"372","location":{"end":{"column":25,"line":15},"start":{"column":7,"line":15}},"mutatorName":"BinaryExpression","replacement":"field !== 'userId'","status":"Killed"},{"id":"375","location":{"end":{"column":68,"line":18},"start":{"column":7,"line":18}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"376","location":{"end":{"column":68,"line":18},"start":{"column":7,"line":18}},"mutatorName":"BinaryExpression","replacement":"field && value || !findValueByKeyInObject(photoFormat, field)","status":"Killed"},{"id":"370","location":{"end":{"column":25,"line":15},"start":{"column":7,"line":15}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"377","location":{"end":{"column":21,"line":18},"start":{"column":7,"line":18}},"mutatorName":"BinaryExpression","replacement":"field || value","status":"Killed"},{"id":"379","location":{"end":{"column":21,"line":18},"start":{"column":7,"line":18}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"373","location":{"end":{"column":25,"line":15},"start":{"column":17,"line":15}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"378","location":{"end":{"column":21,"line":18},"start":{"column":7,"line":18}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"380","location":{"end":{"column":68,"line":18},"start":{"column":25,"line":18}},"mutatorName":"PrefixUnaryExpression","replacement":"findValueByKeyInObject(photoFormat, field)","status":"Killed"},{"id":"381","location":{"end":{"column":171,"line":18},"start":{"column":76,"line":18}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"383","location":{"end":{"column":170,"line":18},"start":{"column":158,"line":18}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"382","location":{"end":{"column":150,"line":18},"start":{"column":84,"line":18}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"385","location":{"end":{"column":13,"line":22},"start":{"column":7,"line":22}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"384","location":{"end":{"column":46,"line":20},"start":{"column":32,"line":20}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"389","location":{"end":{"column":30,"line":25},"start":{"column":9,"line":25}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"387","location":{"end":{"column":4,"line":28},"start":{"column":15,"line":22}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"386","location":{"end":{"column":13,"line":22},"start":{"column":7,"line":22}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"390","location":{"end":{"column":30,"line":25},"start":{"column":9,"line":25}},"mutatorName":"BinaryExpression","replacement":"response.length !== 0","status":"Killed"},{"id":"392","location":{"end":{"column":73,"line":25},"start":{"column":46,"line":25}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"388","location":{"end":{"column":30,"line":25},"start":{"column":9,"line":25}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"393","location":{"end":{"column":92,"line":25},"start":{"column":81,"line":25}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"391","location":{"end":{"column":93,"line":25},"start":{"column":38,"line":25}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"395","location":{"end":{"column":2,"line":35},"start":{"column":18,"line":33}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"394","location":{"end":{"column":4,"line":30},"start":{"column":10,"line":28}},"mutatorName":"Block","replacement":"{}","status":"Killed"}],"source":"const {filterByValue, findValueByKeyInObject} = require('../../utils');\nconst photoFormat = require('../../utils/formats').photo;\nconst albumsService = require('../albums/albums.model');\n\nconst userPhotos = async (photos, field, value) => {\n  const userAlbums = await albumsService.allAlbums({field, value});\n\n  return userAlbums.reduce((result, album) => {\n    return result.concat(photos.filter(filterByValue({field: 'albumId', value: album.id}, photoFormat)))\n  }, [])\n};\n\nconst filterPhotos = (field, value, photos) => {\n  // Filter by User\n  if (field === 'userId') return userPhotos(photos, field, value);\n\n  // Generic filter\n  if (field && value && !findValueByKeyInObject(photoFormat, field)) throw {error: 'The property you are looking for does not exist in this resourse', code: 'bad_format'};\n\n  const filter = filterByValue({field, value}, photoFormat);\n\n  if (filter) {\n    const response = photos.filter(filter);\n\n    if (response.length === 0) throw {error: 'No value matched criteria', code: 'not_found'};\n    return response\n\n  } else {\n    return  photos\n  }\n};\n\nmodule.exports = {\n  filterPhotos\n};"},"/home/ana/dev/entrevista_wolox/js_app/api/photos/photos.routes.js":{"language":"javascript","mutants":[{"id":"396","location":{"end":{"column":34,"line":1},"start":{"column":25,"line":1}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"397","location":{"end":{"column":63,"line":2},"start":{"column":42,"line":2}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"398","location":{"end":{"column":40,"line":3},"start":{"column":25,"line":3}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"399","location":{"end":{"column":15,"line":7},"start":{"column":12,"line":7}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"400","location":{"end":{"column":18,"line":8},"start":{"column":12,"line":8}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"}],"source":"const express = require('express');\nconst {getAllPhotos, getPhoto} = require('./photos.controller');\nconst respond = require('../controller');\n\nconst router = express.Router();\n\nrouter.get('/', respond(getAllPhotos));\nrouter.get('/:id', respond(getPhoto));\n\nmodule.exports = router;\n\n"},"/home/ana/dev/entrevista_wolox/js_app/api/photos/photos.services.js":{"language":"javascript","mutants":[{"id":"401","location":{"end":{"column":41,"line":1},"start":{"column":24,"line":1}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"402","location":{"end":{"column":49,"line":2},"start":{"column":32,"line":2}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"404","location":{"end":{"column":45,"line":8},"start":{"column":7,"line":8}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"403","location":{"end":{"column":2,"line":13},"start":{"column":45,"line":6}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"407","location":{"end":{"column":23,"line":8},"start":{"column":8,"line":8}},"mutatorName":"BinaryExpression","replacement":"field || !value","status":"Killed"},{"id":"405","location":{"end":{"column":45,"line":8},"start":{"column":7,"line":8}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"409","location":{"end":{"column":23,"line":8},"start":{"column":8,"line":8}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"411","location":{"end":{"column":44,"line":8},"start":{"column":29,"line":8}},"mutatorName":"BinaryExpression","replacement":"!field || value","status":"Killed"},{"id":"406","location":{"end":{"column":45,"line":8},"start":{"column":7,"line":8}},"mutatorName":"BinaryExpression","replacement":"field && !value && !field && value","status":"Killed"},{"id":"408","location":{"end":{"column":23,"line":8},"start":{"column":8,"line":8}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"413","location":{"end":{"column":44,"line":8},"start":{"column":29,"line":8}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"410","location":{"end":{"column":23,"line":8},"start":{"column":17,"line":8}},"mutatorName":"PrefixUnaryExpression","replacement":"value","status":"Killed"},{"id":"415","location":{"end":{"column":113,"line":8},"start":{"column":53,"line":8}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"417","location":{"end":{"column":112,"line":8},"start":{"column":100,"line":8}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"414","location":{"end":{"column":35,"line":8},"start":{"column":29,"line":8}},"mutatorName":"PrefixUnaryExpression","replacement":"field","status":"Killed"},{"id":"416","location":{"end":{"column":92,"line":8},"start":{"column":61,"line":8}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"412","location":{"end":{"column":44,"line":8},"start":{"column":29,"line":8}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"418","location":{"end":{"column":36,"line":15},"start":{"column":18,"line":15}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"}],"source":"const client = require('./photos.client');\nconst {filterPhotos} = require(\"./photos.filter\");\n\nconst photo = client.getPhoto;\n\nconst allPhotos = async ({field, value}) => {\n\n  if ((field && !value) || (!field && value)) throw {error: 'Missing either field or value', code: 'bad_format'};\n\n  const photos = await client.getAllPhotos();\n\n  return filterPhotos(field, value, photos);\n};\n\nmodule.exports = {photo, allPhotos};"},"/home/ana/dev/entrevista_wolox/js_app/api/photos/photos.test.js":{"language":"javascript","mutants":[{"id":"419","location":{"end":{"column":32,"line":1},"start":{"column":24,"line":1}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"420","location":{"end":{"column":38,"line":2},"start":{"column":24,"line":2}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"421","location":{"end":{"column":63,"line":3},"start":{"column":42,"line":3}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"422","location":{"end":{"column":30,"line":4},"start":{"column":24,"line":4}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"423","location":{"end":{"column":28,"line":5},"start":{"column":22,"line":5}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"424","location":{"end":{"column":2,"line":35},"start":{"column":23,"line":7}},"mutatorName":"ArrayLiteral","replacement":"[]","status":"NoCoverage"},{"id":"425","location":{"end":{"column":4,"line":14},"start":{"column":3,"line":8}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"426","location":{"end":{"column":64,"line":11},"start":{"column":12,"line":11}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"427","location":{"end":{"column":50,"line":12},"start":{"column":10,"line":12}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"428","location":{"end":{"column":59,"line":13},"start":{"column":19,"line":13}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"429","location":{"end":{"column":4,"line":21},"start":{"column":3,"line":15}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"430","location":{"end":{"column":52,"line":18},"start":{"column":12,"line":18}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"431","location":{"end":{"column":50,"line":19},"start":{"column":10,"line":19}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"432","location":{"end":{"column":59,"line":20},"start":{"column":19,"line":20}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"433","location":{"end":{"column":4,"line":27},"start":{"column":5,"line":21}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"434","location":{"end":{"column":60,"line":24},"start":{"column":12,"line":24}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"435","location":{"end":{"column":50,"line":25},"start":{"column":10,"line":25}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"436","location":{"end":{"column":59,"line":26},"start":{"column":19,"line":26}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"437","location":{"end":{"column":4,"line":34},"start":{"column":3,"line":28}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"438","location":{"end":{"column":74,"line":31},"start":{"column":12,"line":31}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"439","location":{"end":{"column":50,"line":32},"start":{"column":10,"line":32}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"440","location":{"end":{"column":59,"line":33},"start":{"column":19,"line":33}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"441","location":{"end":{"column":2,"line":50},"start":{"column":16,"line":36}},"mutatorName":"ArrayLiteral","replacement":"[]","status":"NoCoverage"},{"id":"442","location":{"end":{"column":4,"line":41},"start":{"column":3,"line":37}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"443","location":{"end":{"column":35,"line":40},"start":{"column":12,"line":40}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"444","location":{"end":{"column":4,"line":45},"start":{"column":5,"line":41}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"445","location":{"end":{"column":35,"line":44},"start":{"column":12,"line":44}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"446","location":{"end":{"column":4,"line":49},"start":{"column":6,"line":45}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"447","location":{"end":{"column":35,"line":48},"start":{"column":12,"line":48}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"448","location":{"end":{"column":3,"line":73},"start":{"column":15,"line":51}},"mutatorName":"ArrayLiteral","replacement":"[]","status":"NoCoverage"},{"id":"449","location":{"end":{"column":2,"line":73},"start":{"column":16,"line":51}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"450","location":{"end":{"column":24,"line":53},"start":{"column":9,"line":53}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"451","location":{"end":{"column":19,"line":54},"start":{"column":13,"line":54}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"452","location":{"end":{"column":29,"line":55},"start":{"column":10,"line":55}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"453","location":{"end":{"column":4,"line":65},"start":{"column":12,"line":56}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"454","location":{"end":{"column":26,"line":57},"start":{"column":13,"line":57}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"455","location":{"end":{"column":22,"line":58},"start":{"column":12,"line":58}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"456","location":{"end":{"column":24,"line":59},"start":{"column":11,"line":59}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"457","location":{"end":{"column":26,"line":60},"start":{"column":14,"line":60}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"458","location":{"end":{"column":6,"line":64},"start":{"column":10,"line":61}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"459","location":{"end":{"column":22,"line":62},"start":{"column":12,"line":62}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"460","location":{"end":{"column":21,"line":63},"start":{"column":12,"line":63}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"461","location":{"end":{"column":33,"line":66},"start":{"column":10,"line":66}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"462","location":{"end":{"column":27,"line":67},"start":{"column":12,"line":67}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"463","location":{"end":{"column":4,"line":72},"start":{"column":12,"line":68}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"464","location":{"end":{"column":28,"line":69},"start":{"column":11,"line":69}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"465","location":{"end":{"column":58,"line":70},"start":{"column":18,"line":70}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"466","location":{"end":{"column":38,"line":71},"start":{"column":9,"line":71}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"467","location":{"end":{"column":18,"line":75},"start":{"column":10,"line":75}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"468","location":{"end":{"column":2,"line":135},"start":{"column":32,"line":75}},"mutatorName":"Block","replacement":"{}","status":"NoCoverage"},{"id":"469","location":{"end":{"column":85,"line":77},"start":{"column":6,"line":77}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"470","location":{"end":{"column":4,"line":86},"start":{"column":99,"line":77}},"mutatorName":"Block","replacement":"{}","status":"NoCoverage"},{"id":"471","location":{"end":{"column":51,"line":78},"start":{"column":10,"line":78}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"472","location":{"end":{"column":76,"line":78},"start":{"column":53,"line":78}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"473","location":{"end":{"column":74,"line":78},"start":{"column":70,"line":78}},"mutatorName":"BooleanSubstitution","replacement":"false","status":"NoCoverage"},{"id":"474","location":{"end":{"column":15,"line":79},"start":{"column":12,"line":79}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"475","location":{"end":{"column":8,"line":85},"start":{"column":18,"line":83}},"mutatorName":"Block","replacement":"{}","status":"NoCoverage"},{"id":"476","location":{"end":{"column":81,"line":88},"start":{"column":6,"line":88}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"477","location":{"end":{"column":4,"line":102},"start":{"column":95,"line":88}},"mutatorName":"Block","replacement":"{}","status":"NoCoverage"},{"id":"478","location":{"end":{"column":26,"line":90},"start":{"column":19,"line":90}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"479","location":{"end":{"column":51,"line":92},"start":{"column":10,"line":92}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"480","location":{"end":{"column":76,"line":92},"start":{"column":53,"line":92}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"481","location":{"end":{"column":74,"line":92},"start":{"column":70,"line":92}},"mutatorName":"BooleanSubstitution","replacement":"false","status":"NoCoverage"},{"id":"482","location":{"end":{"column":15,"line":93},"start":{"column":12,"line":93}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"483","location":{"end":{"column":46,"line":96},"start":{"column":23,"line":96}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"484","location":{"end":{"column":45,"line":96},"start":{"column":31,"line":96}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"485","location":{"end":{"column":8,"line":101},"start":{"column":18,"line":99}},"mutatorName":"Block","replacement":"{}","status":"NoCoverage"},{"id":"486","location":{"end":{"column":77,"line":100},"start":{"column":59,"line":100}},"mutatorName":"BinaryExpression","replacement":"e[field] !== value","status":"NoCoverage"},{"id":"487","location":{"end":{"column":77,"line":100},"start":{"column":59,"line":100}},"mutatorName":"ConditionalExpression","replacement":"false","status":"NoCoverage"},{"id":"488","location":{"end":{"column":77,"line":100},"start":{"column":59,"line":100}},"mutatorName":"ConditionalExpression","replacement":"true","status":"NoCoverage"},{"id":"489","location":{"end":{"column":42,"line":104},"start":{"column":6,"line":104}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"490","location":{"end":{"column":4,"line":120},"start":{"column":56,"line":104}},"mutatorName":"Block","replacement":"{}","status":"NoCoverage"},{"id":"491","location":{"end":{"column":51,"line":106},"start":{"column":10,"line":106}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"492","location":{"end":{"column":76,"line":106},"start":{"column":53,"line":106}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"493","location":{"end":{"column":74,"line":106},"start":{"column":70,"line":106}},"mutatorName":"BooleanSubstitution","replacement":"false","status":"NoCoverage"},{"id":"494","location":{"end":{"column":15,"line":107},"start":{"column":12,"line":107}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"495","location":{"end":{"column":51,"line":110},"start":{"column":10,"line":110}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"496","location":{"end":{"column":76,"line":110},"start":{"column":53,"line":110}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"497","location":{"end":{"column":74,"line":110},"start":{"column":70,"line":110}},"mutatorName":"BooleanSubstitution","replacement":"false","status":"NoCoverage"},{"id":"498","location":{"end":{"column":15,"line":111},"start":{"column":12,"line":111}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"499","location":{"end":{"column":61,"line":114},"start":{"column":23,"line":114}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"500","location":{"end":{"column":60,"line":114},"start":{"column":31,"line":114}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"501","location":{"end":{"column":47,"line":114},"start":{"column":39,"line":114}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"502","location":{"end":{"column":59,"line":114},"start":{"column":56,"line":114}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"503","location":{"end":{"column":8,"line":119},"start":{"column":18,"line":117}},"mutatorName":"Block","replacement":"{}","status":"NoCoverage"},{"id":"504","location":{"end":{"column":93,"line":118},"start":{"column":59,"line":118}},"mutatorName":"BinaryExpression","replacement":"e.albumId === 1 && e.albumId === 3","status":"NoCoverage"},{"id":"505","location":{"end":{"column":93,"line":118},"start":{"column":59,"line":118}},"mutatorName":"ConditionalExpression","replacement":"false","status":"NoCoverage"},{"id":"506","location":{"end":{"column":93,"line":118},"start":{"column":59,"line":118}},"mutatorName":"ConditionalExpression","replacement":"true","status":"NoCoverage"},{"id":"507","location":{"end":{"column":74,"line":118},"start":{"column":59,"line":118}},"mutatorName":"BinaryExpression","replacement":"e.albumId !== 1","status":"NoCoverage"},{"id":"508","location":{"end":{"column":74,"line":118},"start":{"column":59,"line":118}},"mutatorName":"ConditionalExpression","replacement":"false","status":"NoCoverage"},{"id":"509","location":{"end":{"column":74,"line":118},"start":{"column":59,"line":118}},"mutatorName":"ConditionalExpression","replacement":"true","status":"NoCoverage"},{"id":"510","location":{"end":{"column":93,"line":118},"start":{"column":78,"line":118}},"mutatorName":"BinaryExpression","replacement":"e.albumId !== 3","status":"NoCoverage"},{"id":"511","location":{"end":{"column":93,"line":118},"start":{"column":78,"line":118}},"mutatorName":"ConditionalExpression","replacement":"false","status":"NoCoverage"},{"id":"512","location":{"end":{"column":93,"line":118},"start":{"column":78,"line":118}},"mutatorName":"ConditionalExpression","replacement":"true","status":"NoCoverage"},{"id":"513","location":{"end":{"column":58,"line":122},"start":{"column":6,"line":122}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"514","location":{"end":{"column":4,"line":134},"start":{"column":72,"line":122}},"mutatorName":"Block","replacement":"{}","status":"NoCoverage"},{"id":"515","location":{"end":{"column":24,"line":123},"start":{"column":21,"line":123}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"516","location":{"end":{"column":52,"line":124},"start":{"column":10,"line":124}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"517","location":{"end":{"column":77,"line":124},"start":{"column":54,"line":124}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"518","location":{"end":{"column":75,"line":124},"start":{"column":71,"line":124}},"mutatorName":"BooleanSubstitution","replacement":"false","status":"NoCoverage"},{"id":"519","location":{"end":{"column":25,"line":125},"start":{"column":12,"line":125}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"520","location":{"end":{"column":71,"line":126},"start":{"column":45,"line":126}},"mutatorName":"BinaryExpression","replacement":"e.id !== parseInt(photoId)","status":"NoCoverage"},{"id":"521","location":{"end":{"column":71,"line":126},"start":{"column":45,"line":126}},"mutatorName":"ConditionalExpression","replacement":"false","status":"NoCoverage"},{"id":"522","location":{"end":{"column":71,"line":126},"start":{"column":45,"line":126}},"mutatorName":"ConditionalExpression","replacement":"true","status":"NoCoverage"},{"id":"523","location":{"end":{"column":43,"line":128},"start":{"column":21,"line":128}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"524","location":{"end":{"column":42,"line":128},"start":{"column":30,"line":128}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"525","location":{"end":{"column":8,"line":133},"start":{"column":18,"line":131}},"mutatorName":"Block","replacement":"{}","status":"NoCoverage"},{"id":"526","location":{"end":{"column":85,"line":132},"start":{"column":59,"line":132}},"mutatorName":"BinaryExpression","replacement":"e.id !== parseInt(photoId)","status":"NoCoverage"},{"id":"527","location":{"end":{"column":85,"line":132},"start":{"column":59,"line":132}},"mutatorName":"ConditionalExpression","replacement":"false","status":"NoCoverage"},{"id":"528","location":{"end":{"column":85,"line":132},"start":{"column":59,"line":132}},"mutatorName":"ConditionalExpression","replacement":"true","status":"NoCoverage"}],"source":"const assert = require('assert');\nconst config = require('../../config');\nconst {getAllPhotos, getPhoto} = require('./photos.controller');\nconst expect = require('chai').expect;\nconst nock = require('nock');\n\nconst defaultPhotos = [\n  {\n    albumId: 1,\n    id: 1,\n    title: \"accusamus beatae ad facilis cum similique qui sunt\",\n    url: \"https://via.placeholder.com/600/92c952\",\n    thumbnailUrl: \"https://via.placeholder.com/150/92c952\"\n  },\n  {\n    albumId: 1,\n    id: 2,\n    title: \"reprehenderit est deserunt velit ipsam\",\n    url: \"https://via.placeholder.com/600/771796\",\n    thumbnailUrl: \"https://via.placeholder.com/150/771796\"\n  },{\n    albumId: 2,\n    id: 3,\n    title: \"officia porro iure quia iusto qui ipsa ut modi\",\n    url: \"https://via.placeholder.com/600/24f355\",\n    thumbnailUrl: \"https://via.placeholder.com/150/24f355\"\n  },\n  {\n    albumId: 3,\n    id: 4,\n    title: \"culpa odio esse rerum omnis laboriosam voluptate repudiandae\",\n    url: \"https://via.placeholder.com/600/d32776\",\n    thumbnailUrl: \"https://via.placeholder.com/150/d32776\"\n  }\n];\nconst albums = [\n  {\n    userId: 1,\n    id: 1,\n    title: \"quidem molestiae enim\"\n  },{\n    userId: 2,\n    id: 2,\n    title: \"quidem molestiae enim\"\n  }, {\n    userId: 1,\n    id: 3,\n    title: \"quidem molestiae enim\"\n  }\n];\nconst users = [{\n  id: 1,\n  name: \"Leanne Graham\",\n  username: \"Bret\",\n  email: \"Sincere@april.biz\",\n  address: {\n    street: \"Kulas Light\",\n    suite: \"Apt. 556\",\n    city: \"Gwenborough\",\n    zipcode: \"92998-3874\",\n    geo: {\n      lat: \"-37.3159\",\n      lng: \"81.1496\"\n    }\n  },\n  phone: \"1-770-736-8031 x56442\",\n  website: \"hildegard.org\",\n  company: {\n    name: \"Romaguera-Crona\",\n    catchPhrase: \"Multi-layered client-server neural-net\",\n    bs: \"harness real-time e-markets\"\n  }\n}];\n\ndescribe('Photos', function () {\n\n  it('getAllPhotos with no parameters should return user list from external service', function () {\n    nock(`${config.jsonplaceholder.domain}/photos`, { allowUnmocked: true })\n      .get('/')\n      .reply(200, defaultPhotos);\n\n    return getAllPhotos()\n      .then(e => {\n        expect(e).to.deep.equal(defaultPhotos)\n      })\n  });\n\n  it('getAllPhotos with filter params should filter by field:value [ex.: title]', function () {\n    const value = defaultPhotos[1].title;\n    const field = 'title';\n\n    nock(`${config.jsonplaceholder.domain}/photos`, { allowUnmocked: true })\n      .get('/')\n      .reply(200,defaultPhotos);\n\n    const mockQuery = {query: {field, value}};\n\n    return getAllPhotos(mockQuery)\n      .then(e => {\n        expect(e).to.deep.equal(defaultPhotos.filter(e => e[field] === value))\n      })\n  });\n\n  it('getAllPhotos should filter by user', function () {\n\n    nock(`${config.jsonplaceholder.domain}/albums`, { allowUnmocked: true })\n      .get('/')\n      .reply(200, albums);\n\n    nock(`${config.jsonplaceholder.domain}/photos`, { allowUnmocked: true })\n      .get('/')\n      .reply(200, defaultPhotos);\n\n    const mockQuery = {query: {field: 'userId', value: '1'}};\n\n    return getAllPhotos(mockQuery)\n      .then(e => {\n        expect(e).to.deep.equal(defaultPhotos.filter(e => e.albumId === 1 || e.albumId === 3))\n      })\n  });\n\n  it('getPhoto should return user mathcing with given ID', function () {\n    const photoId = '1';\n    nock(`${config.jsonplaceholder.domain}/photos/`, { allowUnmocked: true })\n      .get(`/${photoId}`)\n      .reply(200, defaultPhotos.filter(e => e.id === parseInt(photoId)));\n\n    const mockReq = {params: {id:photoId}};\n\n    return getPhoto(mockReq)\n      .then(e => {\n        expect(e).to.deep.equal(defaultPhotos.filter(e => e.id === parseInt(photoId)))\n      })\n  });\n});\n"},"/home/ana/dev/entrevista_wolox/js_app/api/posts/posts.client.js":{"language":"javascript","mutants":[{"id":"529","location":{"end":{"column":30,"line":1},"start":{"column":23,"line":1}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"530","location":{"end":{"column":40,"line":2},"start":{"column":27,"line":2}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"531","location":{"end":{"column":44,"line":3},"start":{"column":26,"line":3}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"532","location":{"end":{"column":44,"line":7},"start":{"column":36,"line":7}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"534","location":{"end":{"column":40,"line":10},"start":{"column":18,"line":10}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"533","location":{"end":{"column":41,"line":8},"start":{"column":38,"line":8}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"}],"source":"const axios = require('axios');\nconst {getData} = require('../../utils');\nconst endpoint = require('./posts.endpoint');\n\nconst client = axios.create(endpoint);\n\nconst getPost = (id) => client.get(`/${id}`).then(getData);\nconst getAllPosts = () => client.get('/').then(getData);\n\nmodule.exports = {getPost, getAllPosts};"},"/home/ana/dev/entrevista_wolox/js_app/api/posts/posts.controller.js":{"language":"javascript","mutants":[{"id":"535","location":{"end":{"column":49,"line":1},"start":{"column":34,"line":1}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"536","location":{"end":{"column":2,"line":9},"start":{"column":36,"line":5}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"537","location":{"end":{"column":52,"line":6},"start":{"column":17,"line":6}},"mutatorName":"BinaryExpression","replacement":"req && req.query || req.query.field","status":"Killed"},{"id":"538","location":{"end":{"column":52,"line":6},"start":{"column":17,"line":6}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"540","location":{"end":{"column":33,"line":6},"start":{"column":17,"line":6}},"mutatorName":"BinaryExpression","replacement":"req || req.query","status":"Killed"},{"id":"539","location":{"end":{"column":52,"line":6},"start":{"column":17,"line":6}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"541","location":{"end":{"column":33,"line":6},"start":{"column":17,"line":6}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"542","location":{"end":{"column":33,"line":6},"start":{"column":17,"line":6}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"546","location":{"end":{"column":33,"line":7},"start":{"column":17,"line":7}},"mutatorName":"BinaryExpression","replacement":"req || req.query","status":"Killed"},{"id":"543","location":{"end":{"column":52,"line":7},"start":{"column":17,"line":7}},"mutatorName":"BinaryExpression","replacement":"req && req.query || req.query.value","status":"Killed"},{"id":"547","location":{"end":{"column":33,"line":7},"start":{"column":17,"line":7}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"544","location":{"end":{"column":52,"line":7},"start":{"column":17,"line":7}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"545","location":{"end":{"column":52,"line":7},"start":{"column":17,"line":7}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"549","location":{"end":{"column":33,"line":8},"start":{"column":19,"line":8}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"550","location":{"end":{"column":40,"line":11},"start":{"column":18,"line":11}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"548","location":{"end":{"column":33,"line":7},"start":{"column":17,"line":7}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"}],"source":"const {post, allPosts} = require('./posts.model');\n\nconst getPost = (req) => post(req.params.id);\n\nconst getAllPosts = async (req) => {\n  const field = req && req.query && req.query.field;\n  const value = req && req.query && req.query.value;\n  return allPosts({field, value})\n};\n\nmodule.exports = {getAllPosts, getPost};"},"/home/ana/dev/entrevista_wolox/js_app/api/posts/posts.endpoint.js":{"language":"javascript","mutants":[{"id":"551","location":{"end":{"column":38,"line":1},"start":{"column":24,"line":1}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"552","location":{"end":{"column":2,"line":6},"start":{"column":18,"line":3}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"553","location":{"end":{"column":52,"line":4},"start":{"column":12,"line":4}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"}],"source":"const config = require('../../config');\n\nmodule.exports = {\n  baseURL: `${config.jsonplaceholder.domain}/posts`,\n  timeout: 5000\n};"},"/home/ana/dev/entrevista_wolox/js_app/api/posts/posts.model.js":{"language":"javascript","mutants":[{"id":"554","location":{"end":{"column":40,"line":1},"start":{"column":24,"line":1}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"555","location":{"end":{"column":70,"line":2},"start":{"column":57,"line":2}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"556","location":{"end":{"column":50,"line":3},"start":{"column":29,"line":3}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"559","location":{"end":{"column":45,"line":10},"start":{"column":7,"line":10}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"558","location":{"end":{"column":45,"line":10},"start":{"column":7,"line":10}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"557","location":{"end":{"column":2,"line":25},"start":{"column":44,"line":7}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"561","location":{"end":{"column":23,"line":10},"start":{"column":8,"line":10}},"mutatorName":"BinaryExpression","replacement":"field || !value","status":"Killed"},{"id":"564","location":{"end":{"column":23,"line":10},"start":{"column":17,"line":10}},"mutatorName":"PrefixUnaryExpression","replacement":"value","status":"Killed"},{"id":"562","location":{"end":{"column":23,"line":10},"start":{"column":8,"line":10}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"560","location":{"end":{"column":45,"line":10},"start":{"column":7,"line":10}},"mutatorName":"BinaryExpression","replacement":"field && !value && !field && value","status":"Killed"},{"id":"567","location":{"end":{"column":44,"line":10},"start":{"column":29,"line":10}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"563","location":{"end":{"column":23,"line":10},"start":{"column":8,"line":10}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"565","location":{"end":{"column":44,"line":10},"start":{"column":29,"line":10}},"mutatorName":"BinaryExpression","replacement":"!field || value","status":"Killed"},{"id":"568","location":{"end":{"column":35,"line":10},"start":{"column":29,"line":10}},"mutatorName":"PrefixUnaryExpression","replacement":"field","status":"Killed"},{"id":"569","location":{"end":{"column":113,"line":10},"start":{"column":53,"line":10}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"566","location":{"end":{"column":44,"line":10},"start":{"column":29,"line":10}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"571","location":{"end":{"column":112,"line":10},"start":{"column":100,"line":10}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"570","location":{"end":{"column":92,"line":10},"start":{"column":61,"line":10}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"574","location":{"end":{"column":68,"line":12},"start":{"column":7,"line":12}},"mutatorName":"BinaryExpression","replacement":"field && value || !findValueByKeyInObject(postsFormat, field)","status":"Killed"},{"id":"575","location":{"end":{"column":21,"line":12},"start":{"column":7,"line":12}},"mutatorName":"BinaryExpression","replacement":"field || value","status":"Killed"},{"id":"572","location":{"end":{"column":68,"line":12},"start":{"column":7,"line":12}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"573","location":{"end":{"column":68,"line":12},"start":{"column":7,"line":12}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"576","location":{"end":{"column":21,"line":12},"start":{"column":7,"line":12}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"577","location":{"end":{"column":21,"line":12},"start":{"column":7,"line":12}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"580","location":{"end":{"column":150,"line":12},"start":{"column":84,"line":12}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"579","location":{"end":{"column":171,"line":12},"start":{"column":76,"line":12}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"578","location":{"end":{"column":68,"line":12},"start":{"column":25,"line":12}},"mutatorName":"PrefixUnaryExpression","replacement":"findValueByKeyInObject(postsFormat, field)","status":"Killed"},{"id":"581","location":{"end":{"column":170,"line":12},"start":{"column":158,"line":12}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"582","location":{"end":{"column":52,"line":14},"start":{"column":38,"line":14}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"585","location":{"end":{"column":4,"line":22},"start":{"column":21,"line":16}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"587","location":{"end":{"column":30,"line":19},"start":{"column":9,"line":19}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"583","location":{"end":{"column":19,"line":16},"start":{"column":7,"line":16}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"584","location":{"end":{"column":19,"line":16},"start":{"column":7,"line":16}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"589","location":{"end":{"column":93,"line":19},"start":{"column":38,"line":19}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"588","location":{"end":{"column":30,"line":19},"start":{"column":9,"line":19}},"mutatorName":"BinaryExpression","replacement":"response.length !== 0","status":"Killed"},{"id":"590","location":{"end":{"column":73,"line":19},"start":{"column":46,"line":19}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"591","location":{"end":{"column":92,"line":19},"start":{"column":81,"line":19}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"586","location":{"end":{"column":30,"line":19},"start":{"column":9,"line":19}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"592","location":{"end":{"column":4,"line":24},"start":{"column":10,"line":22}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"593","location":{"end":{"column":34,"line":27},"start":{"column":18,"line":27}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"}],"source":"const client = require('./posts.client');\nconst {filterByValue, findValueByKeyInObject} = require('../../utils');\nconst postsFormat = require('../../utils/formats').post;\n\nconst post = client.getPost;\n\nconst allPosts = async ({field, value}) => {\n  const posts = await client.getAllPosts();\n\n  if ((field && !value) || (!field && value)) throw {error: 'Missing either field or value', code: 'bad_format'};\n\n  if (field && value && !findValueByKeyInObject(postsFormat, field)) throw {error: 'The property you are looking for does not exist in this resourse', code: 'bad_format'};\n\n  const byFieldValue = filterByValue({field, value}, postsFormat);\n\n  if (byFieldValue) {\n    const response = posts.filter(byFieldValue);\n\n    if (response.length === 0) throw {error: 'No value matched criteria', code: 'not_found'};\n    return response\n\n  } else {\n    return  posts\n  }\n};\n\nmodule.exports = {post, allPosts};"},"/home/ana/dev/entrevista_wolox/js_app/api/posts/posts.routes.js":{"language":"javascript","mutants":[{"id":"594","location":{"end":{"column":34,"line":1},"start":{"column":25,"line":1}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"595","location":{"end":{"column":60,"line":2},"start":{"column":40,"line":2}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"596","location":{"end":{"column":40,"line":3},"start":{"column":25,"line":3}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"597","location":{"end":{"column":15,"line":7},"start":{"column":12,"line":7}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"598","location":{"end":{"column":18,"line":8},"start":{"column":12,"line":8}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"}],"source":"const express = require('express');\nconst {getPost, getAllPosts} = require('./posts.controller');\nconst respond = require('../controller');\n\nconst router = express.Router();\n\nrouter.get('/', respond(getAllPosts));\nrouter.get('/:id', respond(getPost));\n\nmodule.exports = router;\n\n"},"/home/ana/dev/entrevista_wolox/js_app/api/posts/posts.test.js":{"language":"javascript","mutants":[{"id":"599","location":{"end":{"column":32,"line":1},"start":{"column":24,"line":1}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"600","location":{"end":{"column":38,"line":2},"start":{"column":24,"line":2}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"601","location":{"end":{"column":60,"line":3},"start":{"column":40,"line":3}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"602","location":{"end":{"column":30,"line":4},"start":{"column":24,"line":4}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"603","location":{"end":{"column":28,"line":5},"start":{"column":22,"line":5}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"604","location":{"end":{"column":2,"line":32},"start":{"column":22,"line":7}},"mutatorName":"ArrayLiteral","replacement":"[]","status":"NoCoverage"},{"id":"605","location":{"end":{"column":4,"line":13},"start":{"column":3,"line":8}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"606","location":{"end":{"column":88,"line":11},"start":{"column":12,"line":11}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"607","location":{"end":{"column":171,"line":12},"start":{"column":11,"line":12}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"608","location":{"end":{"column":4,"line":19},"start":{"column":3,"line":14}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"609","location":{"end":{"column":26,"line":17},"start":{"column":12,"line":17}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"610","location":{"end":{"column":219,"line":18},"start":{"column":11,"line":18}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"611","location":{"end":{"column":4,"line":25},"start":{"column":3,"line":20}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"612","location":{"end":{"column":73,"line":23},"start":{"column":12,"line":23}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"613","location":{"end":{"column":177,"line":24},"start":{"column":11,"line":24}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"614","location":{"end":{"column":4,"line":31},"start":{"column":3,"line":26}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"615","location":{"end":{"column":34,"line":29},"start":{"column":12,"line":29}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"616","location":{"end":{"column":203,"line":30},"start":{"column":11,"line":30}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"617","location":{"end":{"column":17,"line":34},"start":{"column":10,"line":34}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"618","location":{"end":{"column":2,"line":86},"start":{"column":31,"line":34}},"mutatorName":"Block","replacement":"{}","status":"NoCoverage"},{"id":"619","location":{"end":{"column":65,"line":36},"start":{"column":6,"line":36}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"620","location":{"end":{"column":4,"line":45},"start":{"column":79,"line":36}},"mutatorName":"Block","replacement":"{}","status":"NoCoverage"},{"id":"621","location":{"end":{"column":50,"line":37},"start":{"column":10,"line":37}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"622","location":{"end":{"column":75,"line":37},"start":{"column":52,"line":37}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"623","location":{"end":{"column":73,"line":37},"start":{"column":69,"line":37}},"mutatorName":"BooleanSubstitution","replacement":"false","status":"NoCoverage"},{"id":"624","location":{"end":{"column":15,"line":38},"start":{"column":12,"line":38}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"625","location":{"end":{"column":8,"line":44},"start":{"column":18,"line":42}},"mutatorName":"Block","replacement":"{}","status":"NoCoverage"},{"id":"626","location":{"end":{"column":42,"line":47},"start":{"column":6,"line":47}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"627","location":{"end":{"column":4,"line":58},"start":{"column":56,"line":47}},"mutatorName":"Block","replacement":"{}","status":"NoCoverage"},{"id":"628","location":{"end":{"column":50,"line":48},"start":{"column":10,"line":48}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"629","location":{"end":{"column":75,"line":48},"start":{"column":52,"line":48}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"630","location":{"end":{"column":73,"line":48},"start":{"column":69,"line":48}},"mutatorName":"BooleanSubstitution","replacement":"false","status":"NoCoverage"},{"id":"631","location":{"end":{"column":15,"line":49},"start":{"column":12,"line":49}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"632","location":{"end":{"column":79,"line":52},"start":{"column":23,"line":52}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"633","location":{"end":{"column":78,"line":52},"start":{"column":31,"line":52}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"634","location":{"end":{"column":46,"line":52},"start":{"column":39,"line":52}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"635","location":{"end":{"column":77,"line":52},"start":{"column":55,"line":52}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"636","location":{"end":{"column":8,"line":57},"start":{"column":18,"line":55}},"mutatorName":"Block","replacement":"{}","status":"NoCoverage"},{"id":"637","location":{"end":{"column":108,"line":56},"start":{"column":58,"line":56}},"mutatorName":"BinaryExpression","replacement":"e[mockQuery.query.field] !== mockQuery.query.value","status":"NoCoverage"},{"id":"638","location":{"end":{"column":108,"line":56},"start":{"column":58,"line":56}},"mutatorName":"ConditionalExpression","replacement":"false","status":"NoCoverage"},{"id":"639","location":{"end":{"column":108,"line":56},"start":{"column":58,"line":56}},"mutatorName":"ConditionalExpression","replacement":"true","status":"NoCoverage"},{"id":"640","location":{"end":{"column":41,"line":60},"start":{"column":6,"line":60}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"641","location":{"end":{"column":4,"line":71},"start":{"column":55,"line":60}},"mutatorName":"Block","replacement":"{}","status":"NoCoverage"},{"id":"642","location":{"end":{"column":50,"line":61},"start":{"column":10,"line":61}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"643","location":{"end":{"column":75,"line":61},"start":{"column":52,"line":61}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"644","location":{"end":{"column":73,"line":61},"start":{"column":69,"line":61}},"mutatorName":"BooleanSubstitution","replacement":"false","status":"NoCoverage"},{"id":"645","location":{"end":{"column":15,"line":62},"start":{"column":12,"line":62}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"646","location":{"end":{"column":61,"line":65},"start":{"column":23,"line":65}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"647","location":{"end":{"column":60,"line":65},"start":{"column":31,"line":65}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"648","location":{"end":{"column":47,"line":65},"start":{"column":39,"line":65}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"649","location":{"end":{"column":59,"line":65},"start":{"column":56,"line":65}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"650","location":{"end":{"column":8,"line":70},"start":{"column":18,"line":68}},"mutatorName":"Block","replacement":"{}","status":"NoCoverage"},{"id":"651","location":{"end":{"column":118,"line":69},"start":{"column":58,"line":69}},"mutatorName":"BinaryExpression","replacement":"e[mockQuery.query.field] !== parseInt(mockQuery.query.value)","status":"NoCoverage"},{"id":"652","location":{"end":{"column":118,"line":69},"start":{"column":58,"line":69}},"mutatorName":"ConditionalExpression","replacement":"false","status":"NoCoverage"},{"id":"653","location":{"end":{"column":118,"line":69},"start":{"column":58,"line":69}},"mutatorName":"ConditionalExpression","replacement":"true","status":"NoCoverage"},{"id":"654","location":{"end":{"column":57,"line":73},"start":{"column":6,"line":73}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"655","location":{"end":{"column":4,"line":85},"start":{"column":71,"line":73}},"mutatorName":"Block","replacement":"{}","status":"NoCoverage"},{"id":"656","location":{"end":{"column":23,"line":74},"start":{"column":20,"line":74}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"657","location":{"end":{"column":51,"line":75},"start":{"column":10,"line":75}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"658","location":{"end":{"column":76,"line":75},"start":{"column":53,"line":75}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"659","location":{"end":{"column":74,"line":75},"start":{"column":70,"line":75}},"mutatorName":"BooleanSubstitution","replacement":"false","status":"NoCoverage"},{"id":"660","location":{"end":{"column":24,"line":76},"start":{"column":12,"line":76}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"661","location":{"end":{"column":69,"line":77},"start":{"column":44,"line":77}},"mutatorName":"BinaryExpression","replacement":"e.id !== parseInt(postId)","status":"NoCoverage"},{"id":"662","location":{"end":{"column":69,"line":77},"start":{"column":44,"line":77}},"mutatorName":"ConditionalExpression","replacement":"false","status":"NoCoverage"},{"id":"663","location":{"end":{"column":69,"line":77},"start":{"column":44,"line":77}},"mutatorName":"ConditionalExpression","replacement":"true","status":"NoCoverage"},{"id":"664","location":{"end":{"column":42,"line":79},"start":{"column":21,"line":79}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"665","location":{"end":{"column":41,"line":79},"start":{"column":30,"line":79}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"666","location":{"end":{"column":8,"line":84},"start":{"column":18,"line":82}},"mutatorName":"Block","replacement":"{}","status":"NoCoverage"},{"id":"667","location":{"end":{"column":83,"line":83},"start":{"column":58,"line":83}},"mutatorName":"BinaryExpression","replacement":"e.id !== parseInt(postId)","status":"NoCoverage"},{"id":"668","location":{"end":{"column":83,"line":83},"start":{"column":58,"line":83}},"mutatorName":"ConditionalExpression","replacement":"false","status":"NoCoverage"},{"id":"669","location":{"end":{"column":83,"line":83},"start":{"column":58,"line":83}},"mutatorName":"ConditionalExpression","replacement":"true","status":"NoCoverage"}],"source":"const assert = require('assert');\nconst config = require('../../config');\nconst {getAllPosts, getPost} = require('./posts.controller');\nconst expect = require('chai').expect;\nconst nock = require('nock');\n\nconst defaultPosts = [\n  {\n    userId: 1,\n    id: 1,\n    title: \"sunt aut facere repellat provident occaecati excepturi optio reprehenderit\",\n    body: \"quia et suscipit suscipit recusandae consequuntur expedita et cum reprehenderit molestiae ut ut quas totam nostrum rerum est autem sunt rem eveniet architecto\"\n  },\n  {\n    userId: 1,\n    id: 2,\n    title: \"qui est esse\",\n    body: \"est rerum tempore vitae sequi sint nihil reprehenderit dolor beatae ea dolores neque fugiat blanditiis voluptate porro vel nihil molestiae ut reiciendis qui aperiam non debitis possimus qui neque nisi nulla\"\n  },\n  {\n    userId: 2,\n    id: 3,\n    title: \"ea molestias quasi exercitationem repellat qui ipsa sit aut\",\n    body: \"et iusto sed quo iure voluptatem occaecati omnis eligendi aut ad voluptatem doloribus vel accusantium quis pariatur molestiae porro eius odio et labore et velit aut\"\n  },\n  {\n    userId: 1,\n    id: 4,\n    title: \"eum et est occaecati\",\n    body: \"ullam et saepe reiciendis voluptatem adipisci sit amet autem assumenda provident rerum culpa quis hic commodi nesciunt rem tenetur doloremque ipsam iure quis sunt voluptatem rerum illo velit\"\n  }\n];\n\ndescribe('Posts', function () {\n\n  it('getAllPosts should return user list from external service', function () {\n    nock(`${config.jsonplaceholder.domain}/posts`, { allowUnmocked: true })\n      .get('/')\n      .reply(200, defaultPosts);\n\n    return getAllPosts()\n      .then(e => {\n        expect(e).to.deep.equal(defaultPosts)\n      })\n  });\n\n  it('getAllPosts should filter by title', function () {\n    nock(`${config.jsonplaceholder.domain}/posts`, { allowUnmocked: true })\n      .get('/')\n      .reply(200,defaultPosts);\n\n    const mockQuery = {query: {field: 'title', value: 'eum et est occaecati'}};\n\n    return getAllPosts(mockQuery)\n      .then(e => {\n        expect(e).to.deep.equal(defaultPosts.filter(e => e[mockQuery.query.field] === mockQuery.query.value))\n      })\n  });\n\n  it('getAllPosts should filter by user', function () {\n    nock(`${config.jsonplaceholder.domain}/posts`, { allowUnmocked: true })\n      .get('/')\n      .reply(200,defaultPosts);\n\n    const mockQuery = {query: {field: 'userId', value: '1'}};\n\n    return getAllPosts(mockQuery)\n      .then(e => {\n        expect(e).to.deep.equal(defaultPosts.filter(e => e[mockQuery.query.field] === parseInt(mockQuery.query.value)))\n      })\n  });\n\n  it('getPost should return user mathcing with given ID', function () {\n    const postId = '1';\n    nock(`${config.jsonplaceholder.domain}/posts/`, { allowUnmocked: true })\n      .get(`/${postId}`)\n      .reply(200, defaultPosts.filter(e => e.id === parseInt(postId)));\n\n    const mockReq = {params: {id:postId}};\n\n    return getPost(mockReq)\n      .then(e => {\n        expect(e).to.deep.equal(defaultPosts.filter(e => e.id === parseInt(postId)))\n      })\n  });\n});\n"},"/home/ana/dev/entrevista_wolox/js_app/api/routes.js":{"language":"javascript","mutants":[{"id":"670","location":{"end":{"column":45,"line":1},"start":{"column":23,"line":1}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"671","location":{"end":{"column":48,"line":2},"start":{"column":24,"line":2}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"672","location":{"end":{"column":48,"line":3},"start":{"column":24,"line":3}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"673","location":{"end":{"column":45,"line":4},"start":{"column":23,"line":4}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"674","location":{"end":{"column":54,"line":5},"start":{"column":26,"line":5}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"675","location":{"end":{"column":66,"line":6},"start":{"column":30,"line":6}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"676","location":{"end":{"column":72,"line":8},"start":{"column":18,"line":8}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"}],"source":"const users = require('./users/users.routes');\nconst photos = require('./photos/photos.routes');\nconst albums = require('./albums/albums.routes');\nconst posts = require('./posts/posts.routes');\nconst comments = require('./comments/comments.routes');\nconst sharedAlbums = require('./sharedAlbums/sharedAlbums.routes');\n\nmodule.exports = {users, photos, albums, posts, comments, sharedAlbums};"},"/home/ana/dev/entrevista_wolox/js_app/api/sharedAlbums/sharedAlbums.client.js":{"language":"javascript","mutants":[{"id":"677","location":{"end":{"column":64,"line":1},"start":{"column":50,"line":1}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"679","location":{"end":{"column":62,"line":4},"start":{"column":48,"line":4}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"680","location":{"end":{"column":76,"line":6},"start":{"column":62,"line":6}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"682","location":{"end":{"column":6,"line":12},"start":{"column":12,"line":9}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"678","location":{"end":{"column":83,"line":1},"start":{"column":74,"line":1}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"683","location":{"end":{"column":19,"line":10},"start":{"column":15,"line":10}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"684","location":{"end":{"column":73,"line":15},"start":{"column":59,"line":15}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"685","location":{"end":{"column":71,"line":16},"start":{"column":14,"line":16}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"686","location":{"end":{"column":50,"line":16},"start":{"column":29,"line":16}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"687","location":{"end":{"column":70,"line":16},"start":{"column":52,"line":16}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"688","location":{"end":{"column":102,"line":16},"start":{"column":73,"line":16}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"681","location":{"end":{"column":4,"line":13},"start":{"column":16,"line":8}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"690","location":{"end":{"column":78,"line":18},"start":{"column":64,"line":18}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"689","location":{"end":{"column":101,"line":16},"start":{"column":81,"line":16}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"692","location":{"end":{"column":50,"line":19},"start":{"column":29,"line":19}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"694","location":{"end":{"column":105,"line":19},"start":{"column":69,"line":19}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"693","location":{"end":{"column":106,"line":19},"start":{"column":61,"line":19}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"695","location":{"end":{"column":84,"line":19},"start":{"column":70,"line":19}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"697","location":{"end":{"column":95,"line":19},"start":{"column":87,"line":19}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"691","location":{"end":{"column":59,"line":19},"start":{"column":14,"line":19}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"699","location":{"end":{"column":26,"line":23},"start":{"column":7,"line":23}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"696","location":{"end":{"column":104,"line":19},"start":{"column":86,"line":19}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"698","location":{"end":{"column":2,"line":32},"start":{"column":74,"line":21}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"701","location":{"end":{"column":26,"line":23},"start":{"column":7,"line":23}},"mutatorName":"BinaryExpression","replacement":"write === undefined","status":"Killed"},{"id":"703","location":{"end":{"column":45,"line":24},"start":{"column":11,"line":24}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"702","location":{"end":{"column":4,"line":25},"start":{"column":28,"line":23}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"704","location":{"end":{"column":25,"line":26},"start":{"column":7,"line":26}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"705","location":{"end":{"column":25,"line":26},"start":{"column":7,"line":26}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"706","location":{"end":{"column":25,"line":26},"start":{"column":7,"line":26}},"mutatorName":"BinaryExpression","replacement":"read === undefined","status":"Killed"},{"id":"708","location":{"end":{"column":44,"line":27},"start":{"column":11,"line":27}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"709","location":{"end":{"column":38,"line":30},"start":{"column":24,"line":30}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"710","location":{"end":{"column":61,"line":31},"start":{"column":16,"line":31}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"711","location":{"end":{"column":52,"line":31},"start":{"column":31,"line":31}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"712","location":{"end":{"column":76,"line":31},"start":{"column":63,"line":31}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"707","location":{"end":{"column":4,"line":28},"start":{"column":27,"line":26}},"mutatorName":"Block","replacement":"{}","status":"Survived"},{"id":"700","location":{"end":{"column":26,"line":23},"start":{"column":7,"line":23}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"715","location":{"end":{"column":29,"line":36},"start":{"column":5,"line":36}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"714","location":{"end":{"column":4,"line":38},"start":{"column":23,"line":35}},"mutatorName":"ArrayLiteral","replacement":"[]","status":"Killed"},{"id":"717","location":{"end":{"column":31,"line":37},"start":{"column":5,"line":37}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"718","location":{"end":{"column":30,"line":37},"start":{"column":15,"line":37}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"719","location":{"end":{"column":17,"line":40},"start":{"column":7,"line":40}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"721","location":{"end":{"column":4,"line":46},"start":{"column":19,"line":40}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"722","location":{"end":{"column":6,"line":45},"start":{"column":22,"line":41}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"723","location":{"end":{"column":8,"line":44},"start":{"column":15,"line":42}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"724","location":{"end":{"column":50,"line":43},"start":{"column":10,"line":43}},"mutatorName":"BinaryExpression","replacement":"\"sharingUsers.permissions.\" - permission","status":"Killed"},{"id":"725","location":{"end":{"column":37,"line":43},"start":{"column":10,"line":43}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"713","location":{"end":{"column":2,"line":55},"start":{"column":53,"line":34}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"720","location":{"end":{"column":17,"line":40},"start":{"column":7,"line":40}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"716","location":{"end":{"column":28,"line":36},"start":{"column":14,"line":36}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"727","location":{"end":{"column":61,"line":48},"start":{"column":20,"line":48}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"729","location":{"end":{"column":59,"line":48},"start":{"column":37,"line":48}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"728","location":{"end":{"column":60,"line":48},"start":{"column":31,"line":48}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"730","location":{"end":{"column":31,"line":51},"start":{"column":17,"line":51}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"726","location":{"end":{"column":57,"line":43},"start":{"column":53,"line":43}},"mutatorName":"BooleanSubstitution","replacement":"false","status":"Killed"},{"id":"731","location":{"end":{"column":2,"line":65},"start":{"column":18,"line":57}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"}],"source":"const getSharedAlbum = (db, id) => db.collection('sharedAlbums').findOne({_id: id})\n  .then(e => e);\n\nconst getAllSharedAlbums = db => db.collection('sharedAlbums').find({}).toArray();\n\nconst createSharedAlbum = (db, sharedAlbum) => db.collection('sharedAlbums')\n  .insertOne(sharedAlbum)\n  .then(res => {\n    return {\n      result: 'ok',\n      inserted: res.ops[0]\n    }\n  });\n\nconst addAlbumUser = (db, albumId, user) => db.collection('sharedAlbums')\n  .updateOne({_id: albumId, \"sharingUsers.userId\": {$ne: user.userId}}, {$push: {sharingUsers: user}});\n\nconst removeAlbumUser = (db, albumId, userId) => db.collection('sharedAlbums')\n  .updateOne({_id: albumId, \"sharingUsers.userId\": userId}, {$pull: {\"sharingUsers\": {\"userId\": userId}}});\n\nconst changeAlbumUserPermissions = (db, albumId, userId, write, read) => {\n  const alter = {};\n  if (write !== undefined) {\n    alter[\"sharingUsers.$.permissions.write\"] = write;\n  }\n  if (read !== undefined) {\n    alter[\"sharingUsers.$.permissions.read\"] = read;\n  }\n\n  return db.collection('sharedAlbums')\n    .updateOne({_id: albumId, \"sharingUsers.userId\": userId}, {$set: alter});\n};\n\nconst findAlbumUsers = (db, albumId, permission) => {\n  const aggregators = [\n    {$match: {_id: albumId}},\n    {$unwind: \"$sharingUsers\"}\n  ];\n\n  if (permission) {\n    aggregators.push({\n      $match: {\n        [\"sharingUsers.permissions.\" + permission]: true\n      }\n    });\n  }\n\n  aggregators.push({$project: {_id: \"$sharingUsers.userId\"}});\n\n  return db\n    .collection('sharedAlbums')\n    .aggregate(aggregators)\n    .toArray()\n    .then(res => res.map(e => e._id))\n};\n\nmodule.exports = {\n  getSharedAlbum,\n  getAllSharedAlbums,\n  createSharedAlbum,\n  addAlbumUser,\n  removeAlbumUser,\n  changeAlbumUserPermissions,\n  findAlbumUsers\n};"},"/home/ana/dev/entrevista_wolox/js_app/api/sharedAlbums/sharedAlbums.controller.js":{"language":"javascript","mutants":[{"id":"732","location":{"end":{"column":68,"line":1},"start":{"column":46,"line":1}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"734","location":{"end":{"column":35,"line":9},"start":{"column":13,"line":9}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"733","location":{"end":{"column":57,"line":2},"start":{"column":35,"line":2}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"737","location":{"end":{"column":12,"line":13},"start":{"column":6,"line":13}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"736","location":{"end":{"column":12,"line":13},"start":{"column":6,"line":13}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"738","location":{"end":{"column":12,"line":13},"start":{"column":6,"line":13}},"mutatorName":"PrefixUnaryExpression","replacement":"value","status":"Killed"},{"id":"739","location":{"end":{"column":4,"line":15},"start":{"column":14,"line":13}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"740","location":{"end":{"column":58,"line":14},"start":{"column":11,"line":14}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"742","location":{"end":{"column":56,"line":14},"start":{"column":45,"line":14}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"741","location":{"end":{"column":37,"line":14},"start":{"column":20,"line":14}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"744","location":{"end":{"column":52,"line":20},"start":{"column":17,"line":20}},"mutatorName":"BinaryExpression","replacement":"req && req.query || req.query.field","status":"Killed"},{"id":"745","location":{"end":{"column":52,"line":20},"start":{"column":17,"line":20}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"746","location":{"end":{"column":52,"line":20},"start":{"column":17,"line":20}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"748","location":{"end":{"column":33,"line":20},"start":{"column":17,"line":20}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"747","location":{"end":{"column":33,"line":20},"start":{"column":17,"line":20}},"mutatorName":"BinaryExpression","replacement":"req || req.query","status":"Killed"},{"id":"750","location":{"end":{"column":52,"line":21},"start":{"column":17,"line":21}},"mutatorName":"BinaryExpression","replacement":"req && req.query || req.query.value","status":"Killed"},{"id":"749","location":{"end":{"column":33,"line":20},"start":{"column":17,"line":20}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"751","location":{"end":{"column":52,"line":21},"start":{"column":17,"line":21}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"752","location":{"end":{"column":52,"line":21},"start":{"column":17,"line":21}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"753","location":{"end":{"column":33,"line":21},"start":{"column":17,"line":21}},"mutatorName":"BinaryExpression","replacement":"req || req.query","status":"Killed"},{"id":"754","location":{"end":{"column":33,"line":21},"start":{"column":17,"line":21}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"755","location":{"end":{"column":33,"line":21},"start":{"column":17,"line":21}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"756","location":{"end":{"column":44,"line":22},"start":{"column":30,"line":22}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"757","location":{"end":{"column":2,"line":49},"start":{"column":18,"line":41}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"743","location":{"end":{"column":2,"line":23},"start":{"column":41,"line":19}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"735","location":{"end":{"column":2,"line":17},"start":{"column":45,"line":11}},"mutatorName":"Block","replacement":"{}","status":"Killed"}],"source":"const {changeAlbumUserPermissions} = require(\"./sharedAlbums.model\");\nconst {removeAlbumUser} = require(\"./sharedAlbums.model\");\nconst {\n  sharedAlbum,\n  allSharedAlbums,\n  createSharedAlbumModel,\n  addAlbumUser,\n  findAlbumUsers\n} = require('./sharedAlbums.model');\n\nconst getSharedAlbum = db => async (req) => {\n  const value = await sharedAlbum(db, parseInt(req.params.id));\n  if(!value) {\n    throw { error: \"Album not found\", code: \"not_found\" };\n  }\n  return value;\n};\n\nconst getAllSharedAlbums = db => req => {\n  const field = req && req.query && req.query.field;\n  const value = req && req.query && req.query.value;\n  return allSharedAlbums(db, {field, value})\n};\n\nconst createSharedAlbum = db =>\n  req => createSharedAlbumModel(db, req.body);\n\n\nconst addAlbumUserController = db => req => addAlbumUser(db, parseInt(req.params.id), req.body);\nconst removeAlbumUserController = db => req => removeAlbumUser(db, parseInt(req.params.id), parseInt(req.params.userId));\nconst changeAlbumUserPermissionsController = db => req => changeAlbumUserPermissions(\n  db,\n  parseInt(req.params.id),\n  parseInt(req.params.userId),\n  req.body\n);\n\nconst findAlbumUsersController = db => req => findAlbumUsers(db, parseInt(req.params.id), req.query.permission);\n\n\nmodule.exports = {\n  getAllSharedAlbums,\n  getSharedAlbum,\n  createSharedAlbum,\n  addAlbumUserController,\n  removeAlbumUserController,\n  changeAlbumUserPermissionsController,\n  findAlbumUsersController\n};"},"/home/ana/dev/entrevista_wolox/js_app/api/sharedAlbums/sharedAlbums.model.js":{"language":"javascript","mutants":[{"id":"758","location":{"end":{"column":47,"line":1},"start":{"column":24,"line":1}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"759","location":{"end":{"column":70,"line":2},"start":{"column":57,"line":2}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"761","location":{"end":{"column":51,"line":4},"start":{"column":29,"line":4}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"760","location":{"end":{"column":50,"line":3},"start":{"column":29,"line":3}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"763","location":{"end":{"column":45,"line":11},"start":{"column":7,"line":11}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"764","location":{"end":{"column":45,"line":11},"start":{"column":7,"line":11}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"765","location":{"end":{"column":45,"line":11},"start":{"column":7,"line":11}},"mutatorName":"BinaryExpression","replacement":"field && !value && !field && value","status":"Killed"},{"id":"766","location":{"end":{"column":23,"line":11},"start":{"column":8,"line":11}},"mutatorName":"BinaryExpression","replacement":"field || !value","status":"Killed"},{"id":"767","location":{"end":{"column":23,"line":11},"start":{"column":8,"line":11}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"768","location":{"end":{"column":23,"line":11},"start":{"column":8,"line":11}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"769","location":{"end":{"column":23,"line":11},"start":{"column":17,"line":11}},"mutatorName":"PrefixUnaryExpression","replacement":"value","status":"Killed"},{"id":"770","location":{"end":{"column":44,"line":11},"start":{"column":29,"line":11}},"mutatorName":"BinaryExpression","replacement":"!field || value","status":"Killed"},{"id":"771","location":{"end":{"column":44,"line":11},"start":{"column":29,"line":11}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"772","location":{"end":{"column":44,"line":11},"start":{"column":29,"line":11}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"773","location":{"end":{"column":35,"line":11},"start":{"column":29,"line":11}},"mutatorName":"PrefixUnaryExpression","replacement":"field","status":"Killed"},{"id":"774","location":{"end":{"column":113,"line":11},"start":{"column":53,"line":11}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"762","location":{"end":{"column":2,"line":26},"start":{"column":55,"line":8}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"776","location":{"end":{"column":112,"line":11},"start":{"column":100,"line":11}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"777","location":{"end":{"column":68,"line":13},"start":{"column":7,"line":13}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"778","location":{"end":{"column":68,"line":13},"start":{"column":7,"line":13}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"779","location":{"end":{"column":68,"line":13},"start":{"column":7,"line":13}},"mutatorName":"BinaryExpression","replacement":"field && value || !findValueByKeyInObject(albumFormat, field)","status":"Killed"},{"id":"780","location":{"end":{"column":21,"line":13},"start":{"column":7,"line":13}},"mutatorName":"BinaryExpression","replacement":"field || value","status":"Killed"},{"id":"781","location":{"end":{"column":21,"line":13},"start":{"column":7,"line":13}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"782","location":{"end":{"column":21,"line":13},"start":{"column":7,"line":13}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"783","location":{"end":{"column":68,"line":13},"start":{"column":25,"line":13}},"mutatorName":"PrefixUnaryExpression","replacement":"findValueByKeyInObject(albumFormat, field)","status":"Killed"},{"id":"784","location":{"end":{"column":171,"line":13},"start":{"column":76,"line":13}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"775","location":{"end":{"column":92,"line":11},"start":{"column":61,"line":11}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"786","location":{"end":{"column":170,"line":13},"start":{"column":158,"line":13}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"787","location":{"end":{"column":52,"line":15},"start":{"column":38,"line":15}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"788","location":{"end":{"column":19,"line":17},"start":{"column":7,"line":17}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"785","location":{"end":{"column":150,"line":13},"start":{"column":84,"line":13}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"790","location":{"end":{"column":4,"line":23},"start":{"column":21,"line":17}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"791","location":{"end":{"column":30,"line":20},"start":{"column":9,"line":20}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"792","location":{"end":{"column":30,"line":20},"start":{"column":9,"line":20}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"793","location":{"end":{"column":30,"line":20},"start":{"column":9,"line":20}},"mutatorName":"BinaryExpression","replacement":"response.length !== 0","status":"Killed"},{"id":"794","location":{"end":{"column":93,"line":20},"start":{"column":38,"line":20}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"796","location":{"end":{"column":92,"line":20},"start":{"column":81,"line":20}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"795","location":{"end":{"column":73,"line":20},"start":{"column":46,"line":20}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"789","location":{"end":{"column":19,"line":17},"start":{"column":7,"line":17}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"799","location":{"end":{"column":54,"line":29},"start":{"column":21,"line":29}},"mutatorName":"BinaryExpression","replacement":"sharedAlbum || sharedAlbum.userId","status":"Killed"},{"id":"800","location":{"end":{"column":54,"line":29},"start":{"column":21,"line":29}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"801","location":{"end":{"column":54,"line":29},"start":{"column":21,"line":29}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"802","location":{"end":{"column":56,"line":30},"start":{"column":22,"line":30}},"mutatorName":"BinaryExpression","replacement":"sharedAlbum || sharedAlbum.albumId","status":"Killed"},{"id":"803","location":{"end":{"column":56,"line":30},"start":{"column":22,"line":30}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"804","location":{"end":{"column":56,"line":30},"start":{"column":22,"line":30}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"805","location":{"end":{"column":32,"line":32},"start":{"column":7,"line":32}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"806","location":{"end":{"column":32,"line":32},"start":{"column":7,"line":32}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"808","location":{"end":{"column":17,"line":32},"start":{"column":7,"line":32}},"mutatorName":"PrefixUnaryExpression","replacement":"hasUserId","status":"Killed"},{"id":"807","location":{"end":{"column":32,"line":32},"start":{"column":7,"line":32}},"mutatorName":"BinaryExpression","replacement":"!hasUserId && !hasAlbumId","status":"Killed"},{"id":"809","location":{"end":{"column":32,"line":32},"start":{"column":21,"line":32}},"mutatorName":"PrefixUnaryExpression","replacement":"hasAlbumId","status":"Killed"},{"id":"810","location":{"end":{"column":94,"line":32},"start":{"column":41,"line":32}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"811","location":{"end":{"column":74,"line":32},"start":{"column":49,"line":32}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"812","location":{"end":{"column":93,"line":32},"start":{"column":81,"line":32}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"814","location":{"end":{"column":31,"line":35},"start":{"column":7,"line":35}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"813","location":{"end":{"column":31,"line":35},"start":{"column":7,"line":35}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"815","location":{"end":{"column":4,"line":40},"start":{"column":33,"line":35}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"816","location":{"end":{"column":6,"line":39},"start":{"column":57,"line":36}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"818","location":{"end":{"column":25,"line":37},"start":{"column":11,"line":37}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"819","location":{"end":{"column":25,"line":37},"start":{"column":11,"line":37}},"mutatorName":"PrefixUnaryExpression","replacement":"e.permissions","status":"Killed"},{"id":"820","location":{"end":{"column":68,"line":37},"start":{"column":43,"line":37}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"821","location":{"end":{"column":54,"line":37},"start":{"column":50,"line":37}},"mutatorName":"BooleanSubstitution","replacement":"false","status":"NoCoverage"},{"id":"822","location":{"end":{"column":67,"line":37},"start":{"column":62,"line":37}},"mutatorName":"BooleanSubstitution","replacement":"true","status":"NoCoverage"},{"id":"823","location":{"end":{"column":113,"line":41},"start":{"column":39,"line":41}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"797","location":{"end":{"column":4,"line":25},"start":{"column":10,"line":23}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"798","location":{"end":{"column":2,"line":42},"start":{"column":59,"line":28}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"826","location":{"end":{"column":24,"line":45},"start":{"column":7,"line":45}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"817","location":{"end":{"column":25,"line":37},"start":{"column":11,"line":37}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"828","location":{"end":{"column":15,"line":45},"start":{"column":7,"line":45}},"mutatorName":"PrefixUnaryExpression","replacement":"albumId","status":"Killed"},{"id":"829","location":{"end":{"column":24,"line":45},"start":{"column":19,"line":45}},"mutatorName":"PrefixUnaryExpression","replacement":"user","status":"Killed"},{"id":"830","location":{"end":{"column":85,"line":45},"start":{"column":32,"line":45}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"831","location":{"end":{"column":65,"line":45},"start":{"column":40,"line":45}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"832","location":{"end":{"column":84,"line":45},"start":{"column":72,"line":45}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"833","location":{"end":{"column":24,"line":47},"start":{"column":7,"line":47}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"834","location":{"end":{"column":24,"line":47},"start":{"column":7,"line":47}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"835","location":{"end":{"column":24,"line":47},"start":{"column":7,"line":47}},"mutatorName":"PrefixUnaryExpression","replacement":"user.permissions","status":"Killed"},{"id":"836","location":{"end":{"column":4,"line":49},"start":{"column":26,"line":47}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"837","location":{"end":{"column":94,"line":48},"start":{"column":45,"line":48}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"838","location":{"end":{"column":93,"line":48},"start":{"column":68,"line":48}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"839","location":{"end":{"column":79,"line":48},"start":{"column":75,"line":48}},"mutatorName":"BooleanSubstitution","replacement":"false","status":"Killed"},{"id":"827","location":{"end":{"column":24,"line":45},"start":{"column":7,"line":45}},"mutatorName":"BinaryExpression","replacement":"!albumId && !user","status":"Killed"},{"id":"840","location":{"end":{"column":92,"line":48},"start":{"column":87,"line":48}},"mutatorName":"BooleanSubstitution","replacement":"true","status":"Killed"},{"id":"825","location":{"end":{"column":24,"line":45},"start":{"column":7,"line":45}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"843","location":{"end":{"column":26,"line":54},"start":{"column":7,"line":54}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"824","location":{"end":{"column":2,"line":51},"start":{"column":51,"line":44}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"845","location":{"end":{"column":15,"line":54},"start":{"column":7,"line":54}},"mutatorName":"PrefixUnaryExpression","replacement":"albumId","status":"Killed"},{"id":"846","location":{"end":{"column":26,"line":54},"start":{"column":19,"line":54}},"mutatorName":"PrefixUnaryExpression","replacement":"userId","status":"Killed"},{"id":"847","location":{"end":{"column":87,"line":54},"start":{"column":34,"line":54}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"848","location":{"end":{"column":67,"line":54},"start":{"column":42,"line":54}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"849","location":{"end":{"column":86,"line":54},"start":{"column":74,"line":54}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"842","location":{"end":{"column":26,"line":54},"start":{"column":7,"line":54}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"851","location":{"end":{"column":6,"line":69},"start":{"column":29,"line":65}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"844","location":{"end":{"column":26,"line":54},"start":{"column":7,"line":54}},"mutatorName":"BinaryExpression","replacement":"!albumId && !userId","status":"Survived"},{"id":"852","location":{"end":{"column":8,"line":68},"start":{"column":62,"line":66}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"841","location":{"end":{"column":2,"line":57},"start":{"column":56,"line":53}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"850","location":{"end":{"column":2,"line":61},"start":{"column":81,"line":59}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"853","location":{"end":{"column":2,"line":80},"start":{"column":18,"line":72}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"}],"source":"const client = require('./sharedAlbums.client');\nconst {filterByValue, findValueByKeyInObject} = require('../../utils');\nconst albumFormat = require('../../utils/formats').album;\nconst userService = require('../users/users.model');\n\nconst sharedAlbum = client.getSharedAlbum;\n\nconst allSharedAlbums = async (db, {field, value}) => {\n  const albums = await client.getAllSharedAlbums(db);\n\n  if ((field && !value) || (!field && value)) throw {error: 'Missing either field or value', code: 'bad_format'};\n\n  if (field && value && !findValueByKeyInObject(albumFormat, field)) throw {error: 'The property you are looking for does not exist in this resourse', code: 'bad_format'};\n\n  const byFieldValue = filterByValue({field, value}, albumFormat);\n\n  if (byFieldValue) {\n    const response = albums.filter(byFieldValue);\n\n    if (response.length === 0) throw {error: 'No value matched criteria', code: 'not_found'};\n    return response\n\n  } else {\n    return  albums\n  }\n};\n\nconst createSharedAlbumModel = async (db, sharedAlbum) => {\n  const hasUserId = sharedAlbum && sharedAlbum.userId;\n  const hasAlbumId = sharedAlbum && sharedAlbum.albumId;\n\n  if (!hasUserId || !hasAlbumId) throw  {error: 'Missing required fields', code:'bad_format'};\n\n  let newSharingUsers = [];\n  if (sharedAlbum.sharingUsers) {\n    newSharingUsers = sharedAlbum.sharingUsers.map(e => {\n      if (!e.permissions) e.permissions = {read: true, write:false};\n      return e;\n    });\n  }\n  return client.createSharedAlbum(db, {...sharedAlbum, _id: sharedAlbum.albumId,  sharingUsers: newSharingUsers});\n};\n\nconst addAlbumUser = async (db, albumId, user) => {\n  if (!albumId || !user) throw {error: 'Missing required fields', code:'bad_format'};\n\n  if (!user.permissions) {\n    return client.addAlbumUser(db, albumId, {...user, permissions: {read: true, write:false}})\n  }\n  return client.addAlbumUser(db, albumId, user);\n};\n\nconst removeAlbumUser = async (db, albumId, userId) => {\n  if (!albumId || !userId) throw {error: 'Missing required fields', code:'bad_format'};\n\n  return client.removeAlbumUser(db, albumId, userId);\n};\n\nconst changeAlbumUserPermissions = async(db, albumId, userId, {write, read}) => {\n  return client.changeAlbumUserPermissions(db, albumId, userId, write, read);\n};\n\nconst findAlbumUsers = async (db, albumId, permission) =>\n  client.findAlbumUsers(db, albumId, permission)\n    .then(sharingUserIds => {\n      return Promise.all(sharingUserIds.map(sharingUserId => {\n        return userService.user(sharingUserId);\n      }))\n    });\n\n\nmodule.exports = {\n  sharedAlbum,\n  allSharedAlbums,\n  createSharedAlbumModel,\n  addAlbumUser,\n  removeAlbumUser,\n  changeAlbumUserPermissions,\n  findAlbumUsers\n};"},"/home/ana/dev/entrevista_wolox/js_app/api/sharedAlbums/sharedAlbums.routes.js":{"language":"javascript","mutants":[{"id":"854","location":{"end":{"column":34,"line":1},"start":{"column":25,"line":1}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"855","location":{"end":{"column":40,"line":10},"start":{"column":13,"line":10}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"856","location":{"end":{"column":40,"line":11},"start":{"column":25,"line":11}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"857","location":{"end":{"column":2,"line":26},"start":{"column":30,"line":13}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"858","location":{"end":{"column":17,"line":16},"start":{"column":14,"line":16}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"860","location":{"end":{"column":18,"line":18},"start":{"column":15,"line":18}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"859","location":{"end":{"column":20,"line":17},"start":{"column":14,"line":17}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"861","location":{"end":{"column":27,"line":19},"start":{"column":15,"line":19}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"863","location":{"end":{"column":26,"line":21},"start":{"column":14,"line":21}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"862","location":{"end":{"column":37,"line":20},"start":{"column":17,"line":20}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"864","location":{"end":{"column":48,"line":23},"start":{"column":16,"line":23}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"}],"source":"const express = require('express');\nconst {\n  getSharedAlbum,\n  getAllSharedAlbums,\n  createSharedAlbum,\n  addAlbumUserController,\n  removeAlbumUserController,\n  changeAlbumUserPermissionsController,\n  findAlbumUsersController\n} = require('./sharedAlbums.controller');\nconst respond = require('../controller');\n\nconst sharedRouter = (db) => {\n  const router = express.Router();\n\n  router.get('/', respond(getAllSharedAlbums(db)));\n  router.get('/:id', respond(getSharedAlbum(db)));\n  router.post('/', respond(createSharedAlbum(db)));\n  router.post('/:id/users', respond(addAlbumUserController(db)));\n  router.delete('/:id/users/:userId', respond(removeAlbumUserController(db)));\n  router.get('/:id/users', respond(findAlbumUsersController(db)));\n\n  router.patch('/:id/users/:userId/permissions', respond(changeAlbumUserPermissionsController(db)));\n\n  return router\n};\n\nmodule.exports = sharedRouter;\n\n"},"/home/ana/dev/entrevista_wolox/js_app/api/sharedAlbums/sharedAlbums.test.js":{"language":"javascript","mutants":[{"id":"865","location":{"end":{"column":32,"line":1},"start":{"column":24,"line":1}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"866","location":{"end":{"column":38,"line":2},"start":{"column":24,"line":2}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"867","location":{"end":{"column":81,"line":3},"start":{"column":54,"line":3}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"868","location":{"end":{"column":30,"line":4},"start":{"column":24,"line":4}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"869","location":{"end":{"column":28,"line":5},"start":{"column":22,"line":5}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"870","location":{"end":{"column":2,"line":36},"start":{"column":23,"line":7}},"mutatorName":"ArrayLiteral","replacement":"[]","status":"NoCoverage"},{"id":"871","location":{"end":{"column":4,"line":14},"start":{"column":3,"line":8}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"872","location":{"end":{"column":64,"line":11},"start":{"column":12,"line":11}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"873","location":{"end":{"column":50,"line":12},"start":{"column":10,"line":12}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"874","location":{"end":{"column":59,"line":13},"start":{"column":19,"line":13}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"875","location":{"end":{"column":4,"line":21},"start":{"column":3,"line":15}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"876","location":{"end":{"column":52,"line":18},"start":{"column":12,"line":18}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"877","location":{"end":{"column":50,"line":19},"start":{"column":10,"line":19}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"878","location":{"end":{"column":59,"line":20},"start":{"column":19,"line":20}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"879","location":{"end":{"column":4,"line":28},"start":{"column":3,"line":22}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"880","location":{"end":{"column":60,"line":25},"start":{"column":12,"line":25}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"881","location":{"end":{"column":50,"line":26},"start":{"column":10,"line":26}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"882","location":{"end":{"column":59,"line":27},"start":{"column":19,"line":27}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"883","location":{"end":{"column":4,"line":35},"start":{"column":3,"line":29}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"884","location":{"end":{"column":74,"line":32},"start":{"column":12,"line":32}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"885","location":{"end":{"column":50,"line":33},"start":{"column":10,"line":33}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"886","location":{"end":{"column":59,"line":34},"start":{"column":19,"line":34}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"}],"source":"const assert = require('assert');\nconst config = require('../../config');\nconst {getAllSharedAlbums, getSharedAlbum} = require('./sharedAlbums.controller');\nconst expect = require('chai').expect;\nconst nock = require('nock');\n\nconst defaultAlbums = [\n  {\n    albumId: 1,\n    id: 1,\n    title: \"accusamus beatae ad facilis cum similique qui sunt\",\n    url: \"https://via.placeholder.com/600/92c952\",\n    thumbnailUrl: \"https://via.placeholder.com/150/92c952\"\n  },\n  {\n    albumId: 1,\n    id: 2,\n    title: \"reprehenderit est deserunt velit ipsam\",\n    url: \"https://via.placeholder.com/600/771796\",\n    thumbnailUrl: \"https://via.placeholder.com/150/771796\"\n  },\n  {\n    albumId: 1,\n    id: 3,\n    title: \"officia porro iure quia iusto qui ipsa ut modi\",\n    url: \"https://via.placeholder.com/600/24f355\",\n    thumbnailUrl: \"https://via.placeholder.com/150/24f355\"\n  },\n  {\n    albumId: 1,\n    id: 4,\n    title: \"culpa odio esse rerum omnis laboriosam voluptate repudiandae\",\n    url: \"https://via.placeholder.com/600/d32776\",\n    thumbnailUrl: \"https://via.placeholder.com/150/d32776\"\n  }\n];\n/*\ndescribe('Albums', function () {\n  it('getAllAlbums should return user list from external service', function () {\n    nock(`${config.jsonplaceholder.domain}/albums`, { allowUnmocked: true })\n      .get('/')\n      .reply(200, defaultAlbums);\n\n    return getAllSharedAlbums()\n      .then(e => {\n        expect(e).to.deep.equal(defaultAlbums)\n      })\n  });\n\n  it('getAllAlbums should filter by title', function () {\n    nock(`${config.jsonplaceholder.domain}/albums`, { allowUnmocked: true })\n      .get('/')\n      .reply(200,defaultAlbums);\n\n    const mockQuery = {query: {field: 'title', value: 'officia porro iure quia iusto qui ipsa ut modi'}};\n\n    return getAllAlbums(mockQuery)\n      .then(e => {\n        expect(e).to.deep.equal(defaultAlbums.filter(e => e[mockQuery.query.field] === mockQuery.query.value))\n      })\n  });\n\n  it('getAlbum should return user mathcing with given ID', function () {\n    const albumId = '1';\n    nock(`${config.jsonplaceholder.domain}/albums/`, { allowUnmocked: true })\n      .get(`/${albumId}`)\n      .reply(200, defaultAlbums.filter(e => e.id === parseInt(albumId)));\n\n    const mockReq = {params: {id:albumId}};\n\n    return getAlbum(mockReq)\n      .then(e => {\n        expect(e).to.deep.equal(defaultAlbums.filter(e => e.id === parseInt(albumId)))\n      })\n  });\n});\n*/"},"/home/ana/dev/entrevista_wolox/js_app/api/users/user.endpoint.js":{"language":"javascript","mutants":[{"id":"887","location":{"end":{"column":38,"line":1},"start":{"column":24,"line":1}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"888","location":{"end":{"column":2,"line":6},"start":{"column":18,"line":3}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"889","location":{"end":{"column":52,"line":4},"start":{"column":12,"line":4}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"}],"source":"const config = require('../../config');\n\nmodule.exports = {\n  baseURL: `${config.jsonplaceholder.domain}/users`,\n  timeout: 5000\n};"},"/home/ana/dev/entrevista_wolox/js_app/api/users/users.client.js":{"language":"javascript","mutants":[{"id":"890","location":{"end":{"column":30,"line":1},"start":{"column":23,"line":1}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"891","location":{"end":{"column":40,"line":2},"start":{"column":27,"line":2}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"892","location":{"end":{"column":43,"line":3},"start":{"column":26,"line":3}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"893","location":{"end":{"column":44,"line":7},"start":{"column":36,"line":7}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"894","location":{"end":{"column":41,"line":8},"start":{"column":38,"line":8}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"895","location":{"end":{"column":40,"line":10},"start":{"column":18,"line":10}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"}],"source":"const axios = require('axios');\nconst {getData} = require('../../utils');\nconst endpoint = require('./user.endpoint');\n\nconst client = axios.create(endpoint);\n\nconst getUser = (id) => client.get(`/${id}`).then(getData);\nconst getAllUsers = () => client.get('/').then(getData);\n\nmodule.exports = {getUser, getAllUsers};"},"/home/ana/dev/entrevista_wolox/js_app/api/users/users.controller.js":{"language":"javascript","mutants":[{"id":"896","location":{"end":{"column":49,"line":1},"start":{"column":34,"line":1}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"898","location":{"end":{"column":52,"line":6},"start":{"column":17,"line":6}},"mutatorName":"BinaryExpression","replacement":"req && req.query || req.query.field","status":"Killed"},{"id":"900","location":{"end":{"column":52,"line":6},"start":{"column":17,"line":6}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"901","location":{"end":{"column":33,"line":6},"start":{"column":17,"line":6}},"mutatorName":"BinaryExpression","replacement":"req || req.query","status":"Killed"},{"id":"899","location":{"end":{"column":52,"line":6},"start":{"column":17,"line":6}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"897","location":{"end":{"column":2,"line":9},"start":{"column":36,"line":5}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"904","location":{"end":{"column":52,"line":7},"start":{"column":17,"line":7}},"mutatorName":"BinaryExpression","replacement":"req && req.query || req.query.value","status":"Killed"},{"id":"905","location":{"end":{"column":52,"line":7},"start":{"column":17,"line":7}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"906","location":{"end":{"column":52,"line":7},"start":{"column":17,"line":7}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"902","location":{"end":{"column":33,"line":6},"start":{"column":17,"line":6}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"907","location":{"end":{"column":33,"line":7},"start":{"column":17,"line":7}},"mutatorName":"BinaryExpression","replacement":"req || req.query","status":"Killed"},{"id":"910","location":{"end":{"column":33,"line":8},"start":{"column":19,"line":8}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"908","location":{"end":{"column":33,"line":7},"start":{"column":17,"line":7}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"909","location":{"end":{"column":33,"line":7},"start":{"column":17,"line":7}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"911","location":{"end":{"column":40,"line":11},"start":{"column":18,"line":11}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"903","location":{"end":{"column":33,"line":6},"start":{"column":17,"line":6}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"}],"source":"const {user, allUsers} = require('./users.model');\n\nconst getUser = (req) => user(req.params.id);\n\nconst getAllUsers = async (req) => {\n  const field = req && req.query && req.query.field;\n  const value = req && req.query && req.query.value;\n  return allUsers({field, value})\n};\n\nmodule.exports = {getAllUsers, getUser};"},"/home/ana/dev/entrevista_wolox/js_app/api/users/users.model.js":{"language":"javascript","mutants":[{"id":"912","location":{"end":{"column":40,"line":1},"start":{"column":24,"line":1}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"913","location":{"end":{"column":70,"line":2},"start":{"column":57,"line":2}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"914","location":{"end":{"column":50,"line":3},"start":{"column":29,"line":3}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"916","location":{"end":{"column":45,"line":10},"start":{"column":7,"line":10}},"mutatorName":"IfStatement","replacement":"false","status":"Survived"},{"id":"917","location":{"end":{"column":45,"line":10},"start":{"column":7,"line":10}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"919","location":{"end":{"column":23,"line":10},"start":{"column":8,"line":10}},"mutatorName":"BinaryExpression","replacement":"field || !value","status":"Killed"},{"id":"918","location":{"end":{"column":45,"line":10},"start":{"column":7,"line":10}},"mutatorName":"BinaryExpression","replacement":"field && !value && !field && value","status":"Killed"},{"id":"920","location":{"end":{"column":23,"line":10},"start":{"column":8,"line":10}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"921","location":{"end":{"column":23,"line":10},"start":{"column":8,"line":10}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"922","location":{"end":{"column":23,"line":10},"start":{"column":17,"line":10}},"mutatorName":"PrefixUnaryExpression","replacement":"value","status":"Survived"},{"id":"925","location":{"end":{"column":44,"line":10},"start":{"column":29,"line":10}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"926","location":{"end":{"column":35,"line":10},"start":{"column":29,"line":10}},"mutatorName":"PrefixUnaryExpression","replacement":"field","status":"Survived"},{"id":"927","location":{"end":{"column":113,"line":10},"start":{"column":53,"line":10}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"928","location":{"end":{"column":92,"line":10},"start":{"column":61,"line":10}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"929","location":{"end":{"column":112,"line":10},"start":{"column":100,"line":10}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"923","location":{"end":{"column":44,"line":10},"start":{"column":29,"line":10}},"mutatorName":"BinaryExpression","replacement":"!field || value","status":"Killed"},{"id":"924","location":{"end":{"column":44,"line":10},"start":{"column":29,"line":10}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"932","location":{"end":{"column":68,"line":12},"start":{"column":7,"line":12}},"mutatorName":"BinaryExpression","replacement":"field && value || !findValueByKeyInObject(usersFormat, field)","status":"Killed"},{"id":"915","location":{"end":{"column":2,"line":25},"start":{"column":44,"line":7}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"931","location":{"end":{"column":68,"line":12},"start":{"column":7,"line":12}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"935","location":{"end":{"column":21,"line":12},"start":{"column":7,"line":12}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"933","location":{"end":{"column":21,"line":12},"start":{"column":7,"line":12}},"mutatorName":"BinaryExpression","replacement":"field || value","status":"Survived"},{"id":"937","location":{"end":{"column":171,"line":12},"start":{"column":76,"line":12}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"938","location":{"end":{"column":150,"line":12},"start":{"column":84,"line":12}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"939","location":{"end":{"column":170,"line":12},"start":{"column":158,"line":12}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"930","location":{"end":{"column":68,"line":12},"start":{"column":7,"line":12}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"934","location":{"end":{"column":21,"line":12},"start":{"column":7,"line":12}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"941","location":{"end":{"column":19,"line":16},"start":{"column":7,"line":16}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"942","location":{"end":{"column":19,"line":16},"start":{"column":7,"line":16}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"944","location":{"end":{"column":30,"line":19},"start":{"column":9,"line":19}},"mutatorName":"IfStatement","replacement":"false","status":"Survived"},{"id":"936","location":{"end":{"column":68,"line":12},"start":{"column":25,"line":12}},"mutatorName":"PrefixUnaryExpression","replacement":"findValueByKeyInObject(usersFormat, field)","status":"Killed"},{"id":"945","location":{"end":{"column":30,"line":19},"start":{"column":9,"line":19}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"947","location":{"end":{"column":93,"line":19},"start":{"column":38,"line":19}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"948","location":{"end":{"column":73,"line":19},"start":{"column":46,"line":19}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"949","location":{"end":{"column":92,"line":19},"start":{"column":81,"line":19}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"950","location":{"end":{"column":4,"line":24},"start":{"column":10,"line":22}},"mutatorName":"Block","replacement":"{}","status":"Survived"},{"id":"940","location":{"end":{"column":52,"line":14},"start":{"column":38,"line":14}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"943","location":{"end":{"column":4,"line":22},"start":{"column":21,"line":16}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"946","location":{"end":{"column":30,"line":19},"start":{"column":9,"line":19}},"mutatorName":"BinaryExpression","replacement":"response.length !== 0","status":"Killed"},{"id":"951","location":{"end":{"column":34,"line":27},"start":{"column":18,"line":27}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"}],"source":"const client = require('./users.client');\nconst {filterByValue, findValueByKeyInObject} = require('../../utils');\nconst usersFormat = require('../../utils/formats').user;\n\nconst user = client.getUser;\n\nconst allUsers = async ({field, value}) => {\n  const comments = await client.getAllUsers();\n\n  if ((field && !value) || (!field && value)) throw {error: 'Missing either field or value', code: 'bad_format'};\n\n  if (field && value && !findValueByKeyInObject(usersFormat, field)) throw {error: 'The property you are looking for does not exist in this resourse', code: 'bad_format'};\n\n  const byFieldValue = filterByValue({field, value}, usersFormat);\n\n  if (byFieldValue) {\n    const response = comments.filter(byFieldValue);\n\n    if (response.length === 0) throw {error: 'No value matched criteria', code: 'not_found'};\n    return response\n\n  } else {\n    return  comments\n  }\n};\n\nmodule.exports = {user, allUsers};"},"/home/ana/dev/entrevista_wolox/js_app/api/users/users.routes.js":{"language":"javascript","mutants":[{"id":"952","location":{"end":{"column":34,"line":1},"start":{"column":25,"line":1}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"953","location":{"end":{"column":60,"line":2},"start":{"column":40,"line":2}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"954","location":{"end":{"column":40,"line":3},"start":{"column":25,"line":3}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"955","location":{"end":{"column":15,"line":7},"start":{"column":12,"line":7}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"956","location":{"end":{"column":18,"line":8},"start":{"column":12,"line":8}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"}],"source":"const express = require('express');\nconst {getAllUsers, getUser} = require('./users.controller');\nconst respond = require('../controller');\n\nconst router = express.Router();\n\nrouter.get('/', respond(getAllUsers));\nrouter.get('/:id', respond(getUser));\n\nmodule.exports = router;\n\n"},"/home/ana/dev/entrevista_wolox/js_app/api/users/users.test.js":{"language":"javascript","mutants":[{"id":"957","location":{"end":{"column":32,"line":1},"start":{"column":24,"line":1}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"958","location":{"end":{"column":38,"line":2},"start":{"column":24,"line":2}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"959","location":{"end":{"column":60,"line":3},"start":{"column":40,"line":3}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"960","location":{"end":{"column":30,"line":4},"start":{"column":24,"line":4}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"961","location":{"end":{"column":28,"line":5},"start":{"column":22,"line":5}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"962","location":{"end":{"column":2,"line":54},"start":{"column":22,"line":7}},"mutatorName":"ArrayLiteral","replacement":"[]","status":"NoCoverage"},{"id":"963","location":{"end":{"column":4,"line":30},"start":{"column":3,"line":8}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"964","location":{"end":{"column":26,"line":10},"start":{"column":11,"line":10}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"965","location":{"end":{"column":21,"line":11},"start":{"column":15,"line":11}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"966","location":{"end":{"column":31,"line":12},"start":{"column":12,"line":12}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"967","location":{"end":{"column":6,"line":22},"start":{"column":14,"line":13}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"968","location":{"end":{"column":28,"line":14},"start":{"column":15,"line":14}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"969","location":{"end":{"column":24,"line":15},"start":{"column":14,"line":15}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"970","location":{"end":{"column":26,"line":16},"start":{"column":13,"line":16}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"971","location":{"end":{"column":28,"line":17},"start":{"column":16,"line":17}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"972","location":{"end":{"column":8,"line":21},"start":{"column":12,"line":18}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"973","location":{"end":{"column":24,"line":19},"start":{"column":14,"line":19}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"974","location":{"end":{"column":23,"line":20},"start":{"column":14,"line":20}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"975","location":{"end":{"column":35,"line":23},"start":{"column":12,"line":23}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"976","location":{"end":{"column":29,"line":24},"start":{"column":14,"line":24}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"977","location":{"end":{"column":6,"line":29},"start":{"column":14,"line":25}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"978","location":{"end":{"column":30,"line":26},"start":{"column":13,"line":26}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"979","location":{"end":{"column":60,"line":27},"start":{"column":20,"line":27}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"980","location":{"end":{"column":40,"line":28},"start":{"column":11,"line":28}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"981","location":{"end":{"column":4,"line":53},"start":{"column":3,"line":31}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"982","location":{"end":{"column":25,"line":33},"start":{"column":11,"line":33}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"983","location":{"end":{"column":26,"line":34},"start":{"column":15,"line":34}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"984","location":{"end":{"column":31,"line":35},"start":{"column":12,"line":35}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"985","location":{"end":{"column":6,"line":45},"start":{"column":14,"line":36}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"986","location":{"end":{"column":30,"line":37},"start":{"column":15,"line":37}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"987","location":{"end":{"column":25,"line":38},"start":{"column":14,"line":38}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"988","location":{"end":{"column":26,"line":39},"start":{"column":13,"line":39}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"989","location":{"end":{"column":28,"line":40},"start":{"column":16,"line":40}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"990","location":{"end":{"column":8,"line":44},"start":{"column":12,"line":41}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"991","location":{"end":{"column":24,"line":42},"start":{"column":14,"line":42}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"992","location":{"end":{"column":24,"line":43},"start":{"column":14,"line":43}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"993","location":{"end":{"column":33,"line":46},"start":{"column":12,"line":46}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"994","location":{"end":{"column":29,"line":47},"start":{"column":14,"line":47}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"995","location":{"end":{"column":6,"line":52},"start":{"column":14,"line":48}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"996","location":{"end":{"column":27,"line":49},"start":{"column":13,"line":49}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"997","location":{"end":{"column":52,"line":50},"start":{"column":20,"line":50}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"998","location":{"end":{"column":45,"line":51},"start":{"column":11,"line":51}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"999","location":{"end":{"column":17,"line":56},"start":{"column":10,"line":56}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"1000","location":{"end":{"column":2,"line":83},"start":{"column":31,"line":56}},"mutatorName":"Block","replacement":"{}","status":"NoCoverage"},{"id":"1001","location":{"end":{"column":65,"line":58},"start":{"column":6,"line":58}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"1002","location":{"end":{"column":4,"line":67},"start":{"column":79,"line":58}},"mutatorName":"Block","replacement":"{}","status":"NoCoverage"},{"id":"1003","location":{"end":{"column":50,"line":59},"start":{"column":10,"line":59}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"1004","location":{"end":{"column":75,"line":59},"start":{"column":52,"line":59}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"1005","location":{"end":{"column":73,"line":59},"start":{"column":69,"line":59}},"mutatorName":"BooleanSubstitution","replacement":"false","status":"NoCoverage"},{"id":"1006","location":{"end":{"column":15,"line":60},"start":{"column":12,"line":60}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"1007","location":{"end":{"column":8,"line":66},"start":{"column":18,"line":64}},"mutatorName":"Block","replacement":"{}","status":"NoCoverage"},{"id":"1008","location":{"end":{"column":57,"line":69},"start":{"column":6,"line":69}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"1009","location":{"end":{"column":4,"line":81},"start":{"column":71,"line":69}},"mutatorName":"Block","replacement":"{}","status":"NoCoverage"},{"id":"1010","location":{"end":{"column":23,"line":70},"start":{"column":20,"line":70}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"1011","location":{"end":{"column":51,"line":71},"start":{"column":10,"line":71}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"1012","location":{"end":{"column":76,"line":71},"start":{"column":53,"line":71}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"1013","location":{"end":{"column":74,"line":71},"start":{"column":70,"line":71}},"mutatorName":"BooleanSubstitution","replacement":"false","status":"NoCoverage"},{"id":"1014","location":{"end":{"column":24,"line":72},"start":{"column":12,"line":72}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"1015","location":{"end":{"column":69,"line":73},"start":{"column":44,"line":73}},"mutatorName":"BinaryExpression","replacement":"e.id !== parseInt(userId)","status":"NoCoverage"},{"id":"1016","location":{"end":{"column":69,"line":73},"start":{"column":44,"line":73}},"mutatorName":"ConditionalExpression","replacement":"false","status":"NoCoverage"},{"id":"1017","location":{"end":{"column":69,"line":73},"start":{"column":44,"line":73}},"mutatorName":"ConditionalExpression","replacement":"true","status":"NoCoverage"},{"id":"1018","location":{"end":{"column":42,"line":75},"start":{"column":21,"line":75}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"1019","location":{"end":{"column":41,"line":75},"start":{"column":30,"line":75}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"1020","location":{"end":{"column":8,"line":80},"start":{"column":18,"line":78}},"mutatorName":"Block","replacement":"{}","status":"NoCoverage"},{"id":"1021","location":{"end":{"column":83,"line":79},"start":{"column":58,"line":79}},"mutatorName":"BinaryExpression","replacement":"e.id !== parseInt(userId)","status":"NoCoverage"},{"id":"1022","location":{"end":{"column":83,"line":79},"start":{"column":58,"line":79}},"mutatorName":"ConditionalExpression","replacement":"false","status":"NoCoverage"},{"id":"1023","location":{"end":{"column":83,"line":79},"start":{"column":58,"line":79}},"mutatorName":"ConditionalExpression","replacement":"true","status":"NoCoverage"}],"source":"const assert = require('assert');\nconst config = require('../../config');\nconst {getAllUsers, getUser} = require('./users.controller');\nconst expect = require('chai').expect;\nconst nock = require('nock');\n\nconst defaultUsers = [\n  {\n    id: 1,\n    name: \"Leanne Graham\",\n    username: \"Bret\",\n    email: \"Sincere@april.biz\",\n    address: {\n      street: \"Kulas Light\",\n      suite: \"Apt. 556\",\n      city: \"Gwenborough\",\n      zipcode: \"92998-3874\",\n      geo: {\n        lat: \"-37.3159\",\n        lng: \"81.1496\"\n      }\n    },\n    phone: \"1-770-736-8031 x56442\",\n    website: \"hildegard.org\",\n    company: {\n      name: \"Romaguera-Crona\",\n      catchPhrase: \"Multi-layered client-server neural-net\",\n      bs: \"harness real-time e-markets\"\n    }\n  },\n  {\n    id: 2,\n    name: \"Ervin Howell\",\n    username: \"Antonette\",\n    email: \"Shanna@melissa.tv\",\n    address: {\n      street: \"Victor Plains\",\n      suite: \"Suite 879\",\n      city: \"Wisokyburgh\",\n      zipcode: \"90566-7771\",\n      geo: {\n        lat: \"-43.9509\",\n        lng: \"-34.4618\"\n      }\n    },\n    phone: \"010-692-6593 x09125\",\n    website: \"anastasia.net\",\n    company: {\n      name: \"Deckow-Crist\",\n      catchPhrase: \"Proactive didactic contingency\",\n      bs: \"synergize scalable supply-chains\"\n    }\n  }\n];\n\ndescribe('Users', function () {\n\n  it('getAllUsers should return user list from external service', function () {\n    nock(`${config.jsonplaceholder.domain}/users`, { allowUnmocked: true })\n      .get('/')\n      .reply(200, defaultUsers);\n\n    return getAllUsers()\n      .then(e => {\n        expect(e).to.deep.equal(defaultUsers)\n      })\n  });\n\n  it('getUser should return user mathcing with given ID', function () {\n    const userId = '1';\n    nock(`${config.jsonplaceholder.domain}/users/`, { allowUnmocked: true })\n      .get(`/${userId}`)\n      .reply(200, defaultUsers.filter(e => e.id === parseInt(userId)));\n\n    const mockReq = {params: {id:userId}};\n\n    return getUser(mockReq)\n      .then(e => {\n        expect(e).to.deep.equal(defaultUsers.filter(e => e.id === parseInt(userId)))\n      })\n  });\n\n});"},"/home/ana/dev/entrevista_wolox/js_app/utils/formats.js":{"language":"javascript","mutants":[{"id":"1024","location":{"end":{"column":2,"line":23},"start":{"column":23,"line":1}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"1026","location":{"end":{"column":17,"line":3},"start":{"column":9,"line":3}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"1025","location":{"end":{"column":15,"line":2},"start":{"column":7,"line":2}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"1028","location":{"end":{"column":18,"line":5},"start":{"column":10,"line":5}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"1027","location":{"end":{"column":21,"line":4},"start":{"column":13,"line":4}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"1029","location":{"end":{"column":4,"line":15},"start":{"column":12,"line":6}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"1032","location":{"end":{"column":19,"line":9},"start":{"column":11,"line":9}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"1033","location":{"end":{"column":22,"line":10},"start":{"column":14,"line":10}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"1030","location":{"end":{"column":21,"line":7},"start":{"column":13,"line":7}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"1031","location":{"end":{"column":20,"line":8},"start":{"column":12,"line":8}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"1034","location":{"end":{"column":6,"line":14},"start":{"column":10,"line":11}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"1037","location":{"end":{"column":18,"line":16},"start":{"column":10,"line":16}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"1036","location":{"end":{"column":20,"line":13},"start":{"column":12,"line":13}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"1035","location":{"end":{"column":20,"line":12},"start":{"column":12,"line":12}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"1039","location":{"end":{"column":4,"line":22},"start":{"column":12,"line":18}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"1042","location":{"end":{"column":17,"line":21},"start":{"column":9,"line":21}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"1038","location":{"end":{"column":20,"line":17},"start":{"column":12,"line":17}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"1043","location":{"end":{"column":2,"line":31},"start":{"column":24,"line":25}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"1041","location":{"end":{"column":26,"line":20},"start":{"column":18,"line":20}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"1044","location":{"end":{"column":20,"line":26},"start":{"column":12,"line":26}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"1047","location":{"end":{"column":16,"line":29},"start":{"column":8,"line":29}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"1046","location":{"end":{"column":18,"line":28},"start":{"column":10,"line":28}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"1049","location":{"end":{"column":2,"line":37},"start":{"column":24,"line":33}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"1040","location":{"end":{"column":19,"line":19},"start":{"column":11,"line":19}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"1048","location":{"end":{"column":25,"line":30},"start":{"column":17,"line":30}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"1050","location":{"end":{"column":19,"line":34},"start":{"column":11,"line":34}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"1052","location":{"end":{"column":18,"line":36},"start":{"column":10,"line":36}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"1045","location":{"end":{"column":15,"line":27},"start":{"column":7,"line":27}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"1055","location":{"end":{"column":15,"line":41},"start":{"column":7,"line":41}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"1054","location":{"end":{"column":19,"line":40},"start":{"column":11,"line":40}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"1051","location":{"end":{"column":15,"line":35},"start":{"column":7,"line":35}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"1056","location":{"end":{"column":18,"line":42},"start":{"column":10,"line":42}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"1053","location":{"end":{"column":2,"line":44},"start":{"column":23,"line":39}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"1058","location":{"end":{"column":2,"line":52},"start":{"column":27,"line":46}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"1057","location":{"end":{"column":17,"line":43},"start":{"column":9,"line":43}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"1061","location":{"end":{"column":17,"line":49},"start":{"column":9,"line":49}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"1059","location":{"end":{"column":19,"line":47},"start":{"column":11,"line":47}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"1063","location":{"end":{"column":17,"line":51},"start":{"column":9,"line":51}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"1064","location":{"end":{"column":2,"line":66},"start":{"column":31,"line":54}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"1060","location":{"end":{"column":15,"line":48},"start":{"column":7,"line":48}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"1062","location":{"end":{"column":18,"line":50},"start":{"column":10,"line":50}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"1065","location":{"end":{"column":19,"line":55},"start":{"column":11,"line":55}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"1068","location":{"end":{"column":6,"line":64},"start":{"column":5,"line":58}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"1066","location":{"end":{"column":20,"line":56},"start":{"column":12,"line":56}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"1067","location":{"end":{"column":4,"line":65},"start":{"column":17,"line":57}},"mutatorName":"ArrayLiteral","replacement":"[]","status":"Killed"},{"id":"1070","location":{"end":{"column":8,"line":63},"start":{"column":20,"line":60}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"1071","location":{"end":{"column":19,"line":61},"start":{"column":15,"line":61}},"mutatorName":"BooleanSubstitution","replacement":"false","status":"Killed"},{"id":"1069","location":{"end":{"column":23,"line":59},"start":{"column":15,"line":59}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"1072","location":{"end":{"column":20,"line":62},"start":{"column":16,"line":62}},"mutatorName":"BooleanSubstitution","replacement":"false","status":"Killed"}],"source":"module.exports.user = {\n  id: 'number',\n  name: 'string',\n  username: 'string',\n  email: 'string',\n  address: {\n    street: 'string',\n    suite: 'string',\n    city: 'string',\n    zipcode: 'string',\n    geo: {\n      lat: 'string',\n      lng: 'string'\n    }\n  },\n  phone: 'string',\n  website: 'string',\n  company: {\n    name: 'string',\n    catchPhrase: 'string',\n    bs: 'string'\n  }\n};\n\nmodule.exports.photo = {\n  albumId: 'number',\n  id: 'number',\n  title: 'string',\n  url: 'string',\n  thumbnailUrl: 'string'\n};\n\nmodule.exports.album = {\n  userId: 'number',\n  id: 'number',\n  title: 'string'\n};\n\nmodule.exports.post = {\n  userId: 'number',\n  id: 'number',\n  title: 'string',\n  body: 'string'\n};\n\nmodule.exports.comments = {\n  postId: 'number',\n  id: 'number',\n  name: 'string',\n  email: 'string',\n  body: 'string'\n};\n\nmodule.exports.sharedAlbums = {\n  userId: 'number',\n  albumId: 'number',\n  sharingUsers: [\n    {\n      userId: 'number',\n      permissions: {\n        read: true,\n        write: true\n      }\n    }\n  ]\n};"},"/home/ana/dev/entrevista_wolox/js_app/utils/index.js":{"language":"javascript","mutants":[{"id":"1073","location":{"end":{"column":30,"line":1},"start":{"column":24,"line":1}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"1074","location":{"end":{"column":115,"line":3},"start":{"column":31,"line":3}},"mutatorName":"BinaryExpression","replacement":"!!obj && !!Object.keys(obj).length && typeof obj === 'object' || !Array.isArray(obj)","status":"Killed"},{"id":"1076","location":{"end":{"column":115,"line":3},"start":{"column":31,"line":3}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"1075","location":{"end":{"column":115,"line":3},"start":{"column":31,"line":3}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"1077","location":{"end":{"column":92,"line":3},"start":{"column":31,"line":3}},"mutatorName":"BinaryExpression","replacement":"!!obj && !!Object.keys(obj).length || typeof obj === 'object'","status":"Killed"},{"id":"1079","location":{"end":{"column":92,"line":3},"start":{"column":31,"line":3}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"1078","location":{"end":{"column":92,"line":3},"start":{"column":31,"line":3}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"1080","location":{"end":{"column":65,"line":3},"start":{"column":31,"line":3}},"mutatorName":"BinaryExpression","replacement":"!!obj || !!Object.keys(obj).length","status":"Killed"},{"id":"1082","location":{"end":{"column":65,"line":3},"start":{"column":31,"line":3}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"1084","location":{"end":{"column":36,"line":3},"start":{"column":32,"line":3}},"mutatorName":"PrefixUnaryExpression","replacement":"obj","status":"Killed"},{"id":"1081","location":{"end":{"column":65,"line":3},"start":{"column":31,"line":3}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"1085","location":{"end":{"column":65,"line":3},"start":{"column":40,"line":3}},"mutatorName":"PrefixUnaryExpression","replacement":"!Object.keys(obj).length","status":"Killed"},{"id":"1087","location":{"end":{"column":92,"line":3},"start":{"column":69,"line":3}},"mutatorName":"BinaryExpression","replacement":"typeof obj !== 'object'","status":"Killed"},{"id":"1089","location":{"end":{"column":92,"line":3},"start":{"column":69,"line":3}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"1086","location":{"end":{"column":65,"line":3},"start":{"column":41,"line":3}},"mutatorName":"PrefixUnaryExpression","replacement":"Object.keys(obj).length","status":"Killed"},{"id":"1088","location":{"end":{"column":92,"line":3},"start":{"column":69,"line":3}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"1083","location":{"end":{"column":36,"line":3},"start":{"column":31,"line":3}},"mutatorName":"PrefixUnaryExpression","replacement":"!obj","status":"Killed"},{"id":"1091","location":{"end":{"column":115,"line":3},"start":{"column":96,"line":3}},"mutatorName":"PrefixUnaryExpression","replacement":"Array.isArray(obj)","status":"Killed"},{"id":"1090","location":{"end":{"column":92,"line":3},"start":{"column":84,"line":3}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"1095","location":{"end":{"column":36,"line":7},"start":{"column":9,"line":7}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"1092","location":{"end":{"column":2,"line":13},"start":{"column":46,"line":5}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"1093","location":{"end":{"column":4,"line":12},"start":{"column":23,"line":6}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"1096","location":{"end":{"column":6,"line":9},"start":{"column":38,"line":7}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"1098","location":{"end":{"column":2,"line":27},"start":{"column":43,"line":15}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"1100","location":{"end":{"column":39,"line":16},"start":{"column":17,"line":16}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"1101","location":{"end":{"column":39,"line":16},"start":{"column":17,"line":16}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"1099","location":{"end":{"column":39,"line":16},"start":{"column":17,"line":16}},"mutatorName":"BinaryExpression","replacement":"filter || filter.field","status":"Killed"},{"id":"1094","location":{"end":{"column":36,"line":7},"start":{"column":9,"line":7}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"1102","location":{"end":{"column":39,"line":17},"start":{"column":17,"line":17}},"mutatorName":"BinaryExpression","replacement":"filter || filter.value","status":"Killed"},{"id":"1103","location":{"end":{"column":39,"line":17},"start":{"column":17,"line":17}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"1105","location":{"end":{"column":23,"line":18},"start":{"column":6,"line":18}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"1106","location":{"end":{"column":23,"line":18},"start":{"column":6,"line":18}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"1104","location":{"end":{"column":39,"line":17},"start":{"column":17,"line":17}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"1107","location":{"end":{"column":23,"line":18},"start":{"column":6,"line":18}},"mutatorName":"BinaryExpression","replacement":"!field || !!value","status":"Killed"},{"id":"1108","location":{"end":{"column":12,"line":18},"start":{"column":6,"line":18}},"mutatorName":"PrefixUnaryExpression","replacement":"field","status":"Killed"},{"id":"1111","location":{"end":{"column":4,"line":26},"start":{"column":18,"line":22}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"1112","location":{"end":{"column":34,"line":23},"start":{"column":17,"line":23}},"mutatorName":"BinaryExpression","replacement":"type !== 'number'","status":"Killed"},{"id":"1113","location":{"end":{"column":34,"line":23},"start":{"column":17,"line":23}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"1109","location":{"end":{"column":23,"line":18},"start":{"column":16,"line":18}},"mutatorName":"PrefixUnaryExpression","replacement":"!value","status":"Killed"},{"id":"1115","location":{"end":{"column":34,"line":23},"start":{"column":26,"line":23}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"1114","location":{"end":{"column":34,"line":23},"start":{"column":17,"line":23}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"1116","location":{"end":{"column":55,"line":25},"start":{"column":12,"line":25}},"mutatorName":"BinaryExpression","replacement":"findValueByKeyInObject(item, field) !== val","status":"Killed"},{"id":"1118","location":{"end":{"column":55,"line":25},"start":{"column":12,"line":25}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"1097","location":{"end":{"column":6,"line":11},"start":{"column":12,"line":9}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"1119","location":{"end":{"column":2,"line":39},"start":{"column":57,"line":29}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"1117","location":{"end":{"column":55,"line":25},"start":{"column":12,"line":25}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"1122","location":{"end":{"column":4,"line":38},"start":{"column":29,"line":32}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"1120","location":{"end":{"column":26,"line":30},"start":{"column":7,"line":30}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"1110","location":{"end":{"column":23,"line":18},"start":{"column":17,"line":18}},"mutatorName":"PrefixUnaryExpression","replacement":"value","status":"Killed"},{"id":"1124","location":{"end":{"column":28,"line":33},"start":{"column":9,"line":33}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"1126","location":{"end":{"column":6,"line":35},"start":{"column":30,"line":33}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"1123","location":{"end":{"column":28,"line":33},"start":{"column":9,"line":33}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"1125","location":{"end":{"column":28,"line":33},"start":{"column":9,"line":33}},"mutatorName":"BinaryExpression","replacement":"key !== searchedKey","status":"Killed"},{"id":"1128","location":{"end":{"column":77,"line":35},"start":{"column":16,"line":35}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"1127","location":{"end":{"column":77,"line":35},"start":{"column":16,"line":35}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"1131","location":{"end":{"column":2,"line":43},"start":{"column":40,"line":41}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"1121","location":{"end":{"column":26,"line":30},"start":{"column":7,"line":30}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"1129","location":{"end":{"column":77,"line":35},"start":{"column":16,"line":35}},"mutatorName":"BinaryExpression","replacement":"object[key] instanceof Array && object[key] instanceof Object","status":"Killed"},{"id":"1133","location":{"end":{"column":48,"line":42},"start":{"column":21,"line":42}},"mutatorName":"BinaryExpression","replacement":"Math.random() / (max - min)","status":"Killed"},{"id":"1132","location":{"end":{"column":54,"line":42},"start":{"column":21,"line":42}},"mutatorName":"BinaryExpression","replacement":"Math.random() * (max - min) - min","status":"Killed"},{"id":"1136","location":{"end":{"column":51,"line":46},"start":{"column":17,"line":46}},"mutatorName":"BinaryExpression","replacement":"filterParams || filterParams.field","status":"NoCoverage"},{"id":"1137","location":{"end":{"column":51,"line":46},"start":{"column":17,"line":46}},"mutatorName":"ConditionalExpression","replacement":"false","status":"NoCoverage"},{"id":"1138","location":{"end":{"column":51,"line":46},"start":{"column":17,"line":46}},"mutatorName":"ConditionalExpression","replacement":"true","status":"NoCoverage"},{"id":"1139","location":{"end":{"column":49,"line":47},"start":{"column":15,"line":47}},"mutatorName":"BinaryExpression","replacement":"filterParams || filterParams.value","status":"NoCoverage"},{"id":"1140","location":{"end":{"column":49,"line":47},"start":{"column":15,"line":47}},"mutatorName":"ConditionalExpression","replacement":"false","status":"NoCoverage"},{"id":"1141","location":{"end":{"column":49,"line":47},"start":{"column":15,"line":47}},"mutatorName":"ConditionalExpression","replacement":"true","status":"NoCoverage"},{"id":"1142","location":{"end":{"column":115,"line":50},"start":{"column":10,"line":49}},"mutatorName":"BinaryExpression","replacement":"field && value || (results => results.data.filter(e => findValueByKeyInObject(e, filterParams.field) === filterParams.value))","status":"NoCoverage"},{"id":"1143","location":{"end":{"column":115,"line":50},"start":{"column":10,"line":49}},"mutatorName":"ConditionalExpression","replacement":"false","status":"NoCoverage"},{"id":"1144","location":{"end":{"column":115,"line":50},"start":{"column":10,"line":49}},"mutatorName":"ConditionalExpression","replacement":"true","status":"NoCoverage"},{"id":"1145","location":{"end":{"column":24,"line":49},"start":{"column":10,"line":49}},"mutatorName":"BinaryExpression","replacement":"field || value","status":"NoCoverage"},{"id":"1146","location":{"end":{"column":24,"line":49},"start":{"column":10,"line":49}},"mutatorName":"ConditionalExpression","replacement":"false","status":"NoCoverage"},{"id":"1147","location":{"end":{"column":24,"line":49},"start":{"column":10,"line":49}},"mutatorName":"ConditionalExpression","replacement":"true","status":"NoCoverage"},{"id":"1148","location":{"end":{"column":113,"line":50},"start":{"column":45,"line":50}},"mutatorName":"BinaryExpression","replacement":"findValueByKeyInObject(e, filterParams.field) !== filterParams.value","status":"NoCoverage"},{"id":"1149","location":{"end":{"column":113,"line":50},"start":{"column":45,"line":50}},"mutatorName":"ConditionalExpression","replacement":"false","status":"NoCoverage"},{"id":"1150","location":{"end":{"column":113,"line":50},"start":{"column":45,"line":50}},"mutatorName":"ConditionalExpression","replacement":"true","status":"NoCoverage"},{"id":"1151","location":{"end":{"column":2,"line":68},"start":{"column":18,"line":59}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"1130","location":{"end":{"column":6,"line":37},"start":{"column":79,"line":35}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"1134","location":{"end":{"column":47,"line":42},"start":{"column":38,"line":42}},"mutatorName":"BinaryExpression","replacement":"max + min","status":"Killed"},{"id":"1135","location":{"end":{"column":2,"line":51},"start":{"column":40,"line":45}},"mutatorName":"Block","replacement":"{}","status":"Killed"}],"source":"const expect = require('chai').expect;\n\nconst isObjWithProps = obj => !!obj && !!Object.keys(obj).length && typeof obj === 'object' && !Array.isArray(obj);\n\nconst checkFormat = function cicle(proto, o) {\n  for (prop in proto) {\n    if (isObjWithProps(proto[prop])) {\n      cicle(proto[prop], o[prop])\n    } else {\n      expect(o).to.have.property(prop)\n    }\n  }\n};\n\nconst filterByValue = (filter, format) => {\n  const field = filter && filter.field;\n  const value = filter && filter.value;\n  if(!field && !!value) return null;\n\n  const type = findValueByKeyInObject(format, field);\n\n  return item => {\n    const val = type === 'number' ? parseInt(value):value;\n\n    return findValueByKeyInObject(item, field) === val;\n  };\n};\n\nconst findValueByKeyInObject = (object, searchedKey) => {\n  if (object[searchedKey]) return object[searchedKey];\n\n  for (const key in object) {\n    if (key === searchedKey) {\n      return object[searchedKey];\n    } else if (object[key] instanceof Array || object[key] instanceof Object) {\n      return findValueByKeyInObject(object[key]);\n    }\n  }\n};\n\nconst getRandomInRange = (min, max) => {\n  return Math.floor(Math.random() * (max - min) + min);\n};\n\nconst createFilter = (filterParams) => {\n  const field = filterParams && filterParams.field;\n  let value = filterParams && filterParams.value;\n\n  return field && value\n    && (results => results.data.filter(e => findValueByKeyInObject(e, filterParams.field) === filterParams.value));\n};\n\nconst getData = e => e.data;\n\nconst filterByMatchingField = ({list, matchField, value}) => {\n\n};\n\nmodule.exports = {\n  createFilter,\n  getData,\n  getRandomInRange,\n  isObjWithProps,\n  checkFormat,\n  filterByValue,\n  findValueByKeyInObject,\n  filterByMatchingField\n};"},"/home/ana/dev/entrevista_wolox/js_app/config.js":{"language":"javascript","mutants":[{"id":"1152","location":{"end":{"column":2,"line":17},"start":{"column":13,"line":1}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"RuntimeError"},{"id":"1153","location":{"end":{"column":29,"line":3},"start":{"column":11,"line":3}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"1154","location":{"end":{"column":4,"line":6},"start":{"column":20,"line":4}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"1155","location":{"end":{"column":51,"line":5},"start":{"column":13,"line":5}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"1156","location":{"end":{"column":4,"line":11},"start":{"column":6,"line":7}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"1157","location":{"end":{"column":31,"line":8},"start":{"column":10,"line":8}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"1161","location":{"end":{"column":31,"line":13},"start":{"column":10,"line":13}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"1158","location":{"end":{"column":18,"line":9},"start":{"column":11,"line":9}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"1163","location":{"end":{"column":30,"line":15},"start":{"column":11,"line":15}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"1164","location":{"end":{"column":50,"line":23},"start":{"column":18,"line":23}},"mutatorName":"BinaryExpression","replacement":"process.env.ENV !== 'production'","status":"RuntimeError"},{"id":"1160","location":{"end":{"column":4,"line":16},"start":{"column":11,"line":12}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"1166","location":{"end":{"column":50,"line":23},"start":{"column":18,"line":23}},"mutatorName":"ConditionalExpression","replacement":"true","status":"RuntimeError"},{"id":"1159","location":{"end":{"column":29,"line":10},"start":{"column":11,"line":10}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"1165","location":{"end":{"column":50,"line":23},"start":{"column":18,"line":23}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"1167","location":{"end":{"column":50,"line":23},"start":{"column":38,"line":23}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"1162","location":{"end":{"column":18,"line":14},"start":{"column":11,"line":14}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"}],"source":"const dev = {\n  port: 3000,\n  domain: 'http://localhost',\n  jsonplaceholder: {\n    domain: 'https://jsonplaceholder.typicode.com'\n  },\n  db:{\n    host:'mongodb://localhost',\n    port: '27017',\n    name: 'photoSharing-dev'\n  },\n  testDb: {\n    host:'mongodb://localhost',\n    port: '27017',\n    name: 'photoSharing-test'\n  }\n};\n\nconst prod = {\n\n};\n\nmodule.exports = process.env.ENV === 'production' ? prod : dev;"},"/home/ana/dev/entrevista_wolox/js_app/index.js":{"language":"javascript","mutants":[{"id":"1168","location":{"end":{"column":34,"line":1},"start":{"column":24,"line":1}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"1169","location":{"end":{"column":34,"line":2},"start":{"column":24,"line":2}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"1170","location":{"end":{"column":38,"line":3},"start":{"column":29,"line":3}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"}],"source":"const config = require('./config');\nconst server = require('./server');\nconst MongoClient = require('mongodb').MongoClient;\n\nserver.start(config.port, config.db);\n"},"/home/ana/dev/entrevista_wolox/js_app/server.js":{"language":"javascript","mutants":[{"id":"1171","location":{"end":{"column":41,"line":1},"start":{"column":28,"line":1}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"1172","location":{"end":{"column":34,"line":2},"start":{"column":25,"line":2}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"1173","location":{"end":{"column":28,"line":4},"start":{"column":21,"line":4}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"1174","location":{"end":{"column":38,"line":5},"start":{"column":29,"line":5}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"1175","location":{"end":{"column":2,"line":25},"start":{"column":18,"line":7}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"1176","location":{"end":{"column":4,"line":24},"start":{"column":28,"line":8}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"1177","location":{"end":{"column":19,"line":9},"start":{"column":13,"line":9}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"1181","location":{"end":{"column":47,"line":13},"start":{"column":16,"line":13}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"1182","location":{"end":{"column":74,"line":13},"start":{"column":49,"line":13}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"1183","location":{"end":{"column":72,"line":13},"start":{"column":68,"line":13}},"mutatorName":"BooleanSubstitution","replacement":"false","status":"Killed"},{"id":"1180","location":{"end":{"column":57,"line":10},"start":{"column":53,"line":10}},"mutatorName":"BooleanSubstitution","replacement":"false","status":"Killed"},{"id":"1184","location":{"end":{"column":8,"line":19},"start":{"column":23,"line":14}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"1185","location":{"end":{"column":23,"line":16},"start":{"column":17,"line":16}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"1186","location":{"end":{"column":61,"line":18},"start":{"column":16,"line":18}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"1178","location":{"end":{"column":19,"line":10},"start":{"column":13,"line":10}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"1189","location":{"end":{"column":35,"line":22},"start":{"column":16,"line":22}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"1187","location":{"end":{"column":8,"line":23},"start":{"column":38,"line":20}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"1179","location":{"end":{"column":58,"line":10},"start":{"column":43,"line":10}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"1188","location":{"end":{"column":55,"line":21},"start":{"column":21,"line":21}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"}],"source":"const bodyParser = require('body-parser');\nconst express = require('express');\nconst app = express();\nconst api = require('./api');\nconst MongoClient = require('mongodb').MongoClient;\n\nmodule.exports = {\n  start: (port, dbData) => {\n    app.use('/api', bodyParser.json());\n    app.use('/api', bodyParser.urlencoded({extended:true}));\n\n    return MongoClient\n      .connect(`${dbData.host}:${dbData.port}`, { useNewUrlParser: true })\n      .then(client => {\n        const db = client.db(dbData.name);\n        app.use('/api', api(db));\n\n        return {app: app.listen(port), db, dbClient: client};\n      })\n      .then(({app, db, dbClient}) => {\n        console.log(`Server listening at port ${port}`);\n        return {app, db, dbClient};\n      });\n  }\n};"},"/home/ana/dev/entrevista_wolox/js_app/stryker.conf.js":{"language":"javascript","mutants":[{"id":"1190","location":{"end":{"column":2,"line":13},"start":{"column":35,"line":1}},"mutatorName":"Block","replacement":"{}","status":"NoCoverage"},{"id":"1191","location":{"end":{"column":4,"line":12},"start":{"column":14,"line":2}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"1192","location":{"end":{"column":26,"line":3},"start":{"column":14,"line":3}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"1193","location":{"end":{"column":26,"line":4},"start":{"column":21,"line":4}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"1194","location":{"end":{"column":63,"line":5},"start":{"column":16,"line":5}},"mutatorName":"ArrayLiteral","replacement":"[]","status":"NoCoverage"},{"id":"1195","location":{"end":{"column":23,"line":5},"start":{"column":17,"line":5}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"1196","location":{"end":{"column":37,"line":5},"start":{"column":25,"line":5}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"1197","location":{"end":{"column":49,"line":5},"start":{"column":39,"line":5}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"1198","location":{"end":{"column":62,"line":5},"start":{"column":51,"line":5}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"1199","location":{"end":{"column":24,"line":6},"start":{"column":17,"line":6}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"1200","location":{"end":{"column":27,"line":8},"start":{"column":20,"line":8}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"1201","location":{"end":{"column":32,"line":9},"start":{"column":23,"line":9}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"1202","location":{"end":{"column":58,"line":10},"start":{"column":13,"line":10}},"mutatorName":"ArrayLiteral","replacement":"[]","status":"NoCoverage"},{"id":"1203","location":{"end":{"column":29,"line":10},"start":{"column":14,"line":10}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"1204","location":{"end":{"column":47,"line":10},"start":{"column":30,"line":10}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"1205","location":{"end":{"column":57,"line":10},"start":{"column":49,"line":10}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"1206","location":{"end":{"column":71,"line":11},"start":{"column":12,"line":11}},"mutatorName":"ArrayLiteral","replacement":"[]","status":"NoCoverage"},{"id":"1207","location":{"end":{"column":28,"line":11},"start":{"column":13,"line":11}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"1208","location":{"end":{"column":46,"line":11},"start":{"column":29,"line":11}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"1209","location":{"end":{"column":56,"line":11},"start":{"column":48,"line":11}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"1210","location":{"end":{"column":70,"line":11},"start":{"column":57,"line":11}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"}],"source":"module.exports = function(config) {\n  config.set({\n    mutator: \"javascript\",\n    packageManager: \"npm\",\n    reporters: [\"html\", \"clear-text\", \"progress\", \"dashboard\"],\n    testRunner: \"mocha\",\n    transpilers: [],\n    testFramework: \"mocha\",\n    coverageAnalysis: \"perTest\",\n    mutate: [\"./api/**/*.js\",\"./utils/**/*.js\", \"./*.js\"],\n    files: [\"./api/**/*.js\",\"./utils/**/*.js\", \"./*.js\",\"./test/*.js\"]\n  });\n};\n"}},"schemaVersion":"1.0","thresholds":{"break":null,"high":80,"low":60}};