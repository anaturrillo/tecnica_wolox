document.querySelector('mutation-test-report-app').report = {"files":{"/home/ana/dev/entrevista_wolox/ts_app/app/api/controller.ts":{"language":"typescript","mutants":[{"id":"0","location":{"end":{"column":2,"line":18},"start":{"column":71,"line":5}},"mutatorName":"Block","replacement":"{}","status":"RuntimeError"},{"id":"3","location":{"end":{"column":10,"line":16},"start":{"column":23,"line":12}},"mutatorName":"Block","replacement":"{}","status":"Survived"},{"id":"4","location":{"end":{"column":29,"line":15},"start":{"column":22,"line":15}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"1","location":{"end":{"column":6,"line":17},"start":{"column":51,"line":6}},"mutatorName":"Block","replacement":"{}","status":"Timeout"},{"id":"2","location":{"end":{"column":10,"line":10},"start":{"column":13,"line":7}},"mutatorName":"Block","replacement":"{}","status":"Timeout"}],"source":"import {RequestHandler, Request, NextFunction, Response} from \"express\";\n\nexport type ControllerFunction<T> = (req: Request) => Promise<T> | T;\n\nexport function respond<T>(fn: ControllerFunction<T>): RequestHandler {\n    return async (req: Request, res: Response) => {\n        try {\n            const result = await fn(req);\n            res.json(result)\n        }\n\n        catch (error) {\n            console.error(error);\n            res.status(500);\n            res.json({error})\n        }\n    }\n}\n\n/*\ntype MapFunction <T, S> = (T) => S;\n\ntype Map <T, S> = (arr:T[], fn:MapFunction<T, S>) => S[]\n\nconst miFnParaElMap:MapFunction<string, number> = (e:string):number => {\n    return parseInt(e)\n};\n\nconst miMap:Map <string, number>= (arr:string[], miFnParaElMap):number[] =>{\n    let result = [];\n    for (let i=0; i<arr.length; i++){\n        result.push( miFnParaElMap(arr[i]) )\n    }\n\n    return result\n};\n\n*/\n\n\n"},"/home/ana/dev/entrevista_wolox/ts_app/app/api/routes.ts":{"language":"typescript","mutants":[{"id":"6","location":{"end":{"column":24,"line":13},"start":{"column":16,"line":13}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"5","location":{"end":{"column":2,"line":20},"start":{"column":34,"line":10}},"mutatorName":"Block","replacement":"{}","status":"RuntimeError"}],"source":"import {Router} from \"express\";\nimport usersRouter from './users/users.router'\n/*\nimport albumsRouter from './albums/albums.router'\nimport photosRouter from './photos/photos.router'\nimport commentsRouter from './comments/comments.router'\nimport postsRouter from './posts.router'\n*/\n\nexport function routes(): Router {\n    const router = Router();\n\n    router.use('/users', usersRouter);\n    /*router.use('/albums', albumsRouter);\n    router.use('/photos', photosRouter);\n    router.use('/posts', postsRouter);\n    router.use('/comments', commentsRouter);*/\n\n    return router;\n}"},"/home/ana/dev/entrevista_wolox/ts_app/app/api/users/users.client.ts":{"language":"typescript","mutants":[{"id":"7","location":{"end":{"column":2,"line":10},"start":{"column":50,"line":8}},"mutatorName":"Block","replacement":"{}","status":"RuntimeError"},{"id":"9","location":{"end":{"column":2,"line":14},"start":{"column":48,"line":12}},"mutatorName":"Block","replacement":"{}","status":"RuntimeError"},{"id":"8","location":{"end":{"column":35,"line":9},"start":{"column":23,"line":9}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"10","location":{"end":{"column":26,"line":13},"start":{"column":23,"line":13}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"import {userEndpoint} from '../../utils/endpoints'\nimport axios from 'axios'\nimport {getData} from \"../../utils/helpers\";\nimport {User} from \"../types/models\";\n\nconst client = axios.create(userEndpoint);\n\nexport const getUser = (userId):Promise<User> => {\n    return client.get(`/${userId}`).then(getData)\n};\n\nexport const getUsers = (): Promise<User[]> => {\n    return client.get('/').then(getData)\n};"},"/home/ana/dev/entrevista_wolox/ts_app/app/api/users/users.controller.ts":{"language":"typescript","mutants":[{"id":"12","location":{"end":{"column":34,"line":10},"start":{"column":56,"line":9}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed"},{"id":"11","location":{"end":{"column":12,"line":7},"start":{"column":59,"line":6}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed"}],"source":"import {ControllerFunction} from \"../controller\";\nimport {Request} from \"express\";\nimport {user, users} from './users.service'\nimport {User} from \"../types/models\";\n\nexport const usersController:ControllerFunction<User[]> = (req: Request) =>\n    users();\n\nexport const userController:ControllerFunction<User> = (req: Request) =>\n    user(parseInt(req.params.id));"},"/home/ana/dev/entrevista_wolox/ts_app/app/api/users/users.service.ts":{"language":"typescript","mutants":[{"id":"15","location":{"end":{"column":2,"line":9},"start":{"column":34,"line":5}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"16","location":{"end":{"column":2,"line":18},"start":{"column":46,"line":11}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"17","location":{"end":{"column":15,"line":12},"start":{"column":9,"line":12}},"mutatorName":"IfStatement","replacement":"true","status":"Survived"},{"id":"18","location":{"end":{"column":15,"line":12},"start":{"column":9,"line":12}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"19","location":{"end":{"column":6,"line":15},"start":{"column":17,"line":12}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"20","location":{"end":{"column":6,"line":17},"start":{"column":12,"line":15}},"mutatorName":"Block","replacement":"{}","status":"Survived"},{"id":"21","location":{"end":{"column":41,"line":16},"start":{"column":15,"line":16}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"22","location":{"end":{"column":40,"line":16},"start":{"column":23,"line":16}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"import {getUsers, getUser} from './users.client'\nimport {User} from \"../types/models\";\n\n\nexport const users = async () => {\n    const users: User[] = await getUsers();\n    return users\n\n};\n\nexport const user = async (userId:number) => {\n    if (userId) {\n        const user: User = await getUser(userId) ;\n        return user;\n    } else {\n        throw {error: 'missing user id'}\n    }\n};"},"/home/ana/dev/entrevista_wolox/ts_app/app/api/users/users.router.ts":{"language":"typescript","mutants":[{"id":"13","location":{"end":{"column":15,"line":7},"start":{"column":12,"line":7}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"14","location":{"end":{"column":18,"line":8},"start":{"column":12,"line":8}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"}],"source":"import {Router} from 'express';\nimport {respond} from '../controller'\nimport {userController, usersController} from './users.controller'\n\nconst router = Router();\n\nrouter.get('/', respond(usersController));\nrouter.get('/:id', respond(userController));\n\nexport default router;"},"/home/ana/dev/entrevista_wolox/ts_app/app/server.ts":{"language":"typescript","mutants":[{"id":"23","location":{"end":{"column":2,"line":16},"start":{"column":44,"line":6}},"mutatorName":"Block","replacement":"{}","status":"RuntimeError"},{"id":"24","location":{"end":{"column":19,"line":9},"start":{"column":13,"line":9}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"28","location":{"end":{"column":19,"line":11},"start":{"column":13,"line":11}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"25","location":{"end":{"column":19,"line":10},"start":{"column":13,"line":10}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"26","location":{"end":{"column":58,"line":10},"start":{"column":43,"line":10}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"27","location":{"end":{"column":57,"line":10},"start":{"column":53,"line":10}},"mutatorName":"BooleanSubstitution","replacement":"false","status":"Survived"},{"id":"29","location":{"end":{"column":6,"line":15},"start":{"column":35,"line":13}},"mutatorName":"Block","replacement":"{}","status":"Survived"},{"id":"30","location":{"end":{"column":55,"line":14},"start":{"column":21,"line":14}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"import * as express from 'express';\nimport * as bodyParser from 'body-parser';\nimport {routes} from './api/routes';\nimport * as http from 'http'\n\nexport const init = (port): http.Server => {\n    const app = express();\n\n    app.use('/api', bodyParser.json());\n    app.use('/api', bodyParser.urlencoded({extended:true}));\n    app.use('/api', routes());\n\n    return app.listen(port, () => {\n        console.log(`Server listening at port ${port}`)\n    });\n};\n"},"/home/ana/dev/entrevista_wolox/ts_app/app/utils/config.ts":{"language":"typescript","mutants":[{"id":"31","location":{"end":{"column":2,"line":7},"start":{"column":23,"line":1}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"RuntimeError"},{"id":"32","location":{"end":{"column":31,"line":3},"start":{"column":13,"line":3}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"33","location":{"end":{"column":6,"line":6},"start":{"column":22,"line":4}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"34","location":{"end":{"column":55,"line":5},"start":{"column":17,"line":5}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"}],"source":"export const config = {\n    port: 3000,\n    domain: 'http://localhost',\n    jsonplaceholder: {\n        domain: \"https://jsonplaceholder.typicode.com\"\n    }\n};\n"},"/home/ana/dev/entrevista_wolox/ts_app/app/utils/endpoints.ts":{"language":"typescript","mutants":[{"id":"35","location":{"end":{"column":2,"line":6},"start":{"column":29,"line":3}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"36","location":{"end":{"column":54,"line":4},"start":{"column":14,"line":4}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"}],"source":"import {config} from \"./config\";\n\nexport const userEndpoint = {\n    baseURL: `${config.jsonplaceholder.domain}/users`,\n    timeout: 5000\n};"},"/home/ana/dev/entrevista_wolox/ts_app/app/utils/helpers.ts":{"language":"typescript","mutants":[{"id":"38","location":{"end":{"column":2,"line":8},"start":{"column":36,"line":3}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"39","location":{"end":{"column":52,"line":7},"start":{"column":51,"line":7}},"mutatorName":"BinaryExpression","replacement":"-","status":"Killed"},{"id":"41","location":{"end":{"column":45,"line":7},"start":{"column":44,"line":7}},"mutatorName":"BinaryExpression","replacement":"+","status":"Killed"},{"id":"37","location":{"end":{"column":35,"line":1},"start":{"column":24,"line":1}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed"},{"id":"40","location":{"end":{"column":38,"line":7},"start":{"column":37,"line":7}},"mutatorName":"BinaryExpression","replacement":"/","status":"Survived"}],"source":"export const getData = e => e.data;\n\nexport const getRandomPort = () => {\n    const max = 1025;\n    const min = 65534;\n\n    return Math.floor(Math.random() * (max - min) + min);\n};"}},"schemaVersion":"1.0","thresholds":{"break":null,"high":80,"low":60}};